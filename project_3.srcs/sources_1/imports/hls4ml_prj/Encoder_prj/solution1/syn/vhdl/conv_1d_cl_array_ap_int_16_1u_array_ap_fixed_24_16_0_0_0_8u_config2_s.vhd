-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_1d_cl_array_ap_int_16_1u_array_ap_fixed_24_16_0_0_0_8u_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_V_empty_n : IN STD_LOGIC;
    data_V_data_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC;
    res_V_data_4_V_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    res_V_data_4_V_full_n : IN STD_LOGIC;
    res_V_data_4_V_write : OUT STD_LOGIC;
    res_V_data_5_V_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    res_V_data_5_V_full_n : IN STD_LOGIC;
    res_V_data_5_V_write : OUT STD_LOGIC;
    res_V_data_6_V_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    res_V_data_6_V_full_n : IN STD_LOGIC;
    res_V_data_6_V_write : OUT STD_LOGIC;
    res_V_data_7_V_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    res_V_data_7_V_full_n : IN STD_LOGIC;
    res_V_data_7_V_write : OUT STD_LOGIC );
end;


architecture behav of conv_1d_cl_array_ap_int_16_1u_array_ap_fixed_24_16_0_0_0_8u_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv24_FFFFF6 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111111110110";
    constant ap_const_lv24_FFFFDA : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111111011010";
    constant ap_const_lv24_FFFFDE : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111111011110";
    constant ap_const_lv24_8 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000001000";
    constant ap_const_lv24_FFFFE2 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111111100010";
    constant ap_const_lv24_FFFFFE : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111111111110";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv24_1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_const_lv24_7FFFFF : STD_LOGIC_VECTOR (23 downto 0) := "011111111111111111111111";
    constant ap_const_lv24_800000 : STD_LOGIC_VECTOR (23 downto 0) := "100000000000000000000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv7_41 : STD_LOGIC_VECTOR (6 downto 0) := "1000001";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal kernel_data_V_3_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_3_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal sX : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pX : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_3_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal w2_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal w2_V_ce0 : STD_LOGIC;
    signal w2_V_q0 : STD_LOGIC_VECTOR (62 downto 0);
    signal data_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal and_ln360_reg_2412 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_4_V_blk_n : STD_LOGIC;
    signal res_V_data_5_V_blk_n : STD_LOGIC;
    signal res_V_data_6_V_blk_n : STD_LOGIC;
    signal res_V_data_7_V_blk_n : STD_LOGIC;
    signal in_index21_reg_332 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_data_0_V_1419_reg_343 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_1_V_1117_reg_354 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_2_V_1115_reg_365 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_3_V_1113_reg_376 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_4_V_811_reg_387 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_5_V_89_reg_398 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_6_V_87_reg_409 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_7_V_85_reg_420 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_0_V_reg_2370 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_3_2_load_reg_2375 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_iw_1_fu_449_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_iw_1_reg_2380 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_iw_fu_461_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sX_load_reg_2396 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln360_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln360_reg_2401 : STD_LOGIC_VECTOR (0 downto 0);
    signal pX_load_reg_2406 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln360_fu_525_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_fu_531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_reg_2416 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state5_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln7_reg_2416_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_1_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_1_reg_2421 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_1_reg_2421_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_index_fu_548_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal in_index_reg_2431 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln43_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_2436 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_2436_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_reg_2436_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln56_fu_560_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln56_reg_2440 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_513_reg_2445 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_514_reg_2450 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_515_reg_2455 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_516_reg_2460 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_517_reg_2465 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_518_reg_2470 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_519_reg_2475 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_fu_2314_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_reg_2480 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4097_reg_2487 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_512_fu_2321_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_512_reg_2494 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4102_reg_2501 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_513_fu_2328_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_513_reg_2508 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4107_reg_2515 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_514_fu_2335_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_514_reg_2522 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4112_reg_2529 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_515_fu_2342_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_515_reg_2536 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4117_reg_2543 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_516_fu_2349_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_516_reg_2550 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4122_reg_2557 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_517_fu_2356_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_517_reg_2564 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4127_reg_2571 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1118_518_fu_2363_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln1118_518_reg_2578 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_4132_reg_2584 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_0_V_19_fu_922_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_0_V_19_reg_2591 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal tmp_data_1_V_fu_1112_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_1_V_reg_2597 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_2_V_fu_1302_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_2_V_reg_2603 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_3_V_fu_1492_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_3_V_reg_2609 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_4_V_fu_1682_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_4_V_reg_2615 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_5_V_fu_1872_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_5_V_reg_2621 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_6_V_fu_2062_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_6_V_reg_2627 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_7_V_fu_2259_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_7_V_reg_2633 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal i_iw_0_i22_reg_309 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal io_acc_block_signal_op359 : STD_LOGIC;
    signal ap_block_state9 : BOOLEAN;
    signal icmp_ln64_fu_2308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_iw_0_i_i_i_reg_321 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln166_fu_455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_in_index21_phi_fu_336_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal select_ln391_fu_2288_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_storemerge_i_i_phi_fu_434_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln384_fu_2267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln56_fu_543_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln180_fu_471_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln172_fu_467_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln389_fu_2272_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4096_fu_509_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln360_1_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln7_fu_638_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln7_1_fu_645_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln731_fu_740_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln785_fu_745_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4098_fu_750_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_fu_758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_fu_769_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4099_fu_774_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1024_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1536_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_fu_763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1032_fu_799_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2064_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2048_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_816_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln388_fu_824_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln340_2048_fu_832_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_fu_840_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_1024_fu_844_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_fu_848_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal acc_0_V_fu_862_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4101_fu_868_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4100_fu_854_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_512_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1024_fu_888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1537_fu_882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2049_fu_900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_1024_fu_906_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal acc_0_V_63_fu_914_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln731_1_fu_930_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln785_1_fu_935_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4103_fu_940_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_1_fu_948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1_fu_959_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4104_fu_964_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1025_fu_972_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1538_fu_978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_512_fu_953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2065_fu_994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_1_fu_983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2050_fu_1000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_1_fu_1006_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln388_1_fu_1014_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln340_2050_fu_1022_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_1025_fu_1030_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_1026_fu_1034_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_512_fu_1038_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal acc_1_V_fu_1052_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4106_fu_1058_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4105_fu_1044_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_513_fu_1084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1025_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1539_fu_1072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2051_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_1025_fu_1096_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal acc_1_V_63_fu_1104_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln731_2_fu_1120_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln785_218_fu_1125_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4108_fu_1130_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_2_fu_1138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_2_fu_1149_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4109_fu_1154_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1026_fu_1162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1540_fu_1168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_513_fu_1143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1033_fu_1179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2066_fu_1184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2_fu_1173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2052_fu_1190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_2_fu_1196_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln388_2_fu_1204_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln340_2052_fu_1212_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_1027_fu_1220_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_1028_fu_1224_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_513_fu_1228_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal acc_2_V_fu_1242_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4111_fu_1248_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4110_fu_1234_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_2_fu_1256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_514_fu_1274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1026_fu_1268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1541_fu_1262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2053_fu_1280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_1026_fu_1286_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal acc_2_V_63_fu_1294_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln731_3_fu_1310_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln785_3_fu_1315_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4113_fu_1320_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_319_fu_1328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_3_fu_1339_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4114_fu_1344_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1027_fu_1352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1542_fu_1358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_514_fu_1333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1034_fu_1369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2067_fu_1374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_3_fu_1363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2054_fu_1380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_3_fu_1386_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln388_3_fu_1394_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln340_2054_fu_1402_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_1029_fu_1410_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_1030_fu_1414_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_514_fu_1418_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal acc_3_V_fu_1432_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4116_fu_1438_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4115_fu_1424_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_3_fu_1446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_515_fu_1464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1027_fu_1458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1543_fu_1452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2055_fu_1470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_1027_fu_1476_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal acc_3_V_63_fu_1484_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln731_4_fu_1500_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln785_4_fu_1505_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4118_fu_1510_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_4_fu_1518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_4_fu_1529_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4119_fu_1534_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1028_fu_1542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1544_fu_1548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_515_fu_1523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1035_fu_1559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2068_fu_1564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_420_fu_1553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2056_fu_1570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_4_fu_1576_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln388_4_fu_1584_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln340_2056_fu_1592_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_1031_fu_1600_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_1032_fu_1604_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_515_fu_1608_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal acc_4_V_fu_1622_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4121_fu_1628_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4120_fu_1614_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_4_fu_1636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_516_fu_1654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1028_fu_1648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1545_fu_1642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2057_fu_1660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_1028_fu_1666_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal acc_4_V_63_fu_1674_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln731_5_fu_1690_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln785_5_fu_1695_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4123_fu_1700_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_5_fu_1708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_5_fu_1719_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4124_fu_1724_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1029_fu_1732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1546_fu_1738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_516_fu_1713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1036_fu_1749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2069_fu_1754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_522_fu_1743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2058_fu_1760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_5_fu_1766_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln388_5_fu_1774_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln340_2058_fu_1782_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_1033_fu_1790_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_1034_fu_1794_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_516_fu_1798_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal acc_5_V_fu_1812_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4126_fu_1818_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4125_fu_1804_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_5_fu_1826_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_517_fu_1844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1029_fu_1838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1547_fu_1832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2059_fu_1850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_1029_fu_1856_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal acc_5_V_63_fu_1864_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln731_6_fu_1880_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln785_6_fu_1885_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4128_fu_1890_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_6_fu_1898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_6_fu_1909_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4129_fu_1914_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1030_fu_1922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1548_fu_1928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_517_fu_1903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1037_fu_1939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2070_fu_1944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_6_fu_1933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2060_fu_1950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_6_fu_1956_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln388_6_fu_1964_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln340_2060_fu_1972_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_1035_fu_1980_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_1036_fu_1984_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_517_fu_1988_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal acc_6_V_fu_2002_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4131_fu_2008_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4130_fu_1994_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_6_fu_2016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_518_fu_2034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1030_fu_2028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1549_fu_2022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2061_fu_2040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_1030_fu_2046_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal acc_6_V_63_fu_2054_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln731_7_fu_2073_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1118_515_fu_2070_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln785_7_fu_2080_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4133_fu_2086_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_7_fu_2094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_7_fu_2105_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4134_fu_2111_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_1031_fu_2119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1550_fu_2125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_518_fu_2099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1038_fu_2136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2071_fu_2141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_7_fu_2130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2062_fu_2147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_7_fu_2153_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln388_7_fu_2161_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln340_2062_fu_2169_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_1037_fu_2177_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_1038_fu_2181_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_518_fu_2185_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal acc_7_V_fu_2199_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4136_fu_2205_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4135_fu_2191_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_7_fu_2213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_519_fu_2231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_1031_fu_2225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_1551_fu_2219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_2063_fu_2237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_1031_fu_2243_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal acc_7_V_63_fu_2251_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln391_fu_2283_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln1118_fu_2314_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1116_fu_652_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_ln1118_512_fu_2321_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_513_fu_2328_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_514_fu_2335_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_515_fu_2342_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_516_fu_2349_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_517_fu_2356_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_286 : BOOLEAN;

    component Encoder_mul_mul_16s_8s_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component Encoder_mul_mul_16s_7s_23_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component conv_1d_cl_array_ap_int_16_1u_array_ap_fixed_24_16_0_0_0_8u_config2_s_w2_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (62 downto 0) );
    end component;



begin
    w2_V_U : component conv_1d_cl_array_ap_int_16_1u_array_ap_fixed_24_16_0_0_0_8u_config2_s_w2_V
    generic map (
        DataWidth => 63,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w2_V_address0,
        ce0 => w2_V_ce0,
        q0 => w2_V_q0);

    Encoder_mul_mul_16s_8s_24_1_1_U4 : component Encoder_mul_mul_16s_8s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        din0 => mul_ln1118_fu_2314_p0,
        din1 => trunc_ln56_reg_2440,
        dout => mul_ln1118_fu_2314_p2);

    Encoder_mul_mul_16s_8s_24_1_1_U5 : component Encoder_mul_mul_16s_8s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        din0 => mul_ln1118_512_fu_2321_p0,
        din1 => tmp_513_reg_2445,
        dout => mul_ln1118_512_fu_2321_p2);

    Encoder_mul_mul_16s_8s_24_1_1_U6 : component Encoder_mul_mul_16s_8s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        din0 => mul_ln1118_513_fu_2328_p0,
        din1 => tmp_514_reg_2450,
        dout => mul_ln1118_513_fu_2328_p2);

    Encoder_mul_mul_16s_8s_24_1_1_U7 : component Encoder_mul_mul_16s_8s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        din0 => mul_ln1118_514_fu_2335_p0,
        din1 => tmp_515_reg_2455,
        dout => mul_ln1118_514_fu_2335_p2);

    Encoder_mul_mul_16s_8s_24_1_1_U8 : component Encoder_mul_mul_16s_8s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        din0 => mul_ln1118_515_fu_2342_p0,
        din1 => tmp_516_reg_2460,
        dout => mul_ln1118_515_fu_2342_p2);

    Encoder_mul_mul_16s_8s_24_1_1_U9 : component Encoder_mul_mul_16s_8s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        din0 => mul_ln1118_516_fu_2349_p0,
        din1 => tmp_517_reg_2465,
        dout => mul_ln1118_516_fu_2349_p2);

    Encoder_mul_mul_16s_8s_24_1_1_U10 : component Encoder_mul_mul_16s_8s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        din0 => mul_ln1118_517_fu_2356_p0,
        din1 => tmp_518_reg_2470,
        dout => mul_ln1118_517_fu_2356_p2);

    Encoder_mul_mul_16s_7s_23_1_1_U11 : component Encoder_mul_mul_16s_7s_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 7,
        dout_WIDTH => 23)
    port map (
        din0 => select_ln7_1_fu_645_p3,
        din1 => tmp_519_reg_2475,
        dout => mul_ln1118_518_fu_2363_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((io_acc_block_signal_op359 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln360_reg_2412))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln64_fu_2308_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln43_fu_554_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln360_fu_525_p2))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln360_fu_525_p2))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_iw_0_i22_reg_309_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op359 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln360_reg_2412))) and (icmp_ln64_fu_2308_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                i_iw_0_i22_reg_309 <= i_iw_1_reg_2380;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_iw_0_i22_reg_309 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    i_iw_0_i_i_i_reg_321_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln166_fu_455_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_iw_0_i_i_i_reg_321 <= i_iw_fu_461_p2;
            elsif (((data_V_data_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_iw_0_i_i_i_reg_321 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    in_index21_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln43_reg_2436 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                in_index21_reg_332 <= in_index_reg_2431;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln360_fu_525_p2))) then 
                in_index21_reg_332 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    pX_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_286)) then
                if ((icmp_ln384_fu_2267_p2 = ap_const_lv1_1)) then 
                    pX <= ap_const_lv32_0;
                elsif ((icmp_ln384_fu_2267_p2 = ap_const_lv1_0)) then 
                    pX <= add_ln389_fu_2272_p2;
                end if;
            end if; 
        end if;
    end process;

    tmp_data_0_V_1419_reg_343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln43_reg_2436_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                tmp_data_0_V_1419_reg_343 <= tmp_data_0_V_19_fu_922_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln360_fu_525_p2))) then 
                tmp_data_0_V_1419_reg_343 <= ap_const_lv24_FFFFF6;
            end if; 
        end if;
    end process;

    tmp_data_1_V_1117_reg_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln43_reg_2436_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                tmp_data_1_V_1117_reg_354 <= tmp_data_1_V_fu_1112_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln360_fu_525_p2))) then 
                tmp_data_1_V_1117_reg_354 <= ap_const_lv24_FFFFDA;
            end if; 
        end if;
    end process;

    tmp_data_2_V_1115_reg_365_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln43_reg_2436_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                tmp_data_2_V_1115_reg_365 <= tmp_data_2_V_fu_1302_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln360_fu_525_p2))) then 
                tmp_data_2_V_1115_reg_365 <= ap_const_lv24_FFFFDA;
            end if; 
        end if;
    end process;

    tmp_data_3_V_1113_reg_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln43_reg_2436_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                tmp_data_3_V_1113_reg_376 <= tmp_data_3_V_fu_1492_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln360_fu_525_p2))) then 
                tmp_data_3_V_1113_reg_376 <= ap_const_lv24_FFFFF6;
            end if; 
        end if;
    end process;

    tmp_data_4_V_811_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln43_reg_2436_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                tmp_data_4_V_811_reg_387 <= tmp_data_4_V_fu_1682_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln360_fu_525_p2))) then 
                tmp_data_4_V_811_reg_387 <= ap_const_lv24_FFFFDE;
            end if; 
        end if;
    end process;

    tmp_data_5_V_89_reg_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln43_reg_2436_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                tmp_data_5_V_89_reg_398 <= tmp_data_5_V_fu_1872_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln360_fu_525_p2))) then 
                tmp_data_5_V_89_reg_398 <= ap_const_lv24_8;
            end if; 
        end if;
    end process;

    tmp_data_6_V_87_reg_409_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln43_reg_2436_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                tmp_data_6_V_87_reg_409 <= tmp_data_6_V_fu_2062_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln360_fu_525_p2))) then 
                tmp_data_6_V_87_reg_409 <= ap_const_lv24_FFFFE2;
            end if; 
        end if;
    end process;

    tmp_data_7_V_85_reg_420_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln43_reg_2436_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                tmp_data_7_V_85_reg_420 <= tmp_data_7_V_fu_2259_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln360_fu_525_p2))) then 
                tmp_data_7_V_85_reg_420 <= ap_const_lv24_FFFFFE;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                and_ln360_reg_2412 <= and_ln360_fu_525_p2;
                icmp_ln360_reg_2401 <= icmp_ln360_fu_499_p2;
                kernel_data_V_3_2 <= tmp_data_0_V_reg_2370;
                pX_load_reg_2406 <= pX;
                sX_load_reg_2396 <= sX;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((data_V_data_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                i_iw_1_reg_2380 <= i_iw_1_fu_449_p2;
                kernel_data_V_3_2_load_reg_2375 <= kernel_data_V_3_2;
                tmp_data_0_V_reg_2370 <= data_V_data_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln43_reg_2436 <= icmp_ln43_fu_554_p2;
                icmp_ln43_reg_2436_pp1_iter1_reg <= icmp_ln43_reg_2436;
                icmp_ln7_1_reg_2421 <= icmp_ln7_1_fu_537_p2;
                icmp_ln7_1_reg_2421_pp1_iter1_reg <= icmp_ln7_1_reg_2421;
                icmp_ln7_reg_2416 <= icmp_ln7_fu_531_p2;
                icmp_ln7_reg_2416_pp1_iter1_reg <= icmp_ln7_reg_2416;
                tmp_513_reg_2445 <= w2_V_q0(15 downto 8);
                tmp_514_reg_2450 <= w2_V_q0(23 downto 16);
                tmp_515_reg_2455 <= w2_V_q0(31 downto 24);
                tmp_516_reg_2460 <= w2_V_q0(39 downto 32);
                tmp_517_reg_2465 <= w2_V_q0(47 downto 40);
                tmp_518_reg_2470 <= w2_V_q0(55 downto 48);
                tmp_519_reg_2475 <= w2_V_q0(62 downto 56);
                trunc_ln56_reg_2440 <= trunc_ln56_fu_560_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln43_reg_2436_pp1_iter2_reg <= icmp_ln43_reg_2436_pp1_iter1_reg;
                mul_ln1118_512_reg_2494 <= mul_ln1118_512_fu_2321_p2;
                mul_ln1118_513_reg_2508 <= mul_ln1118_513_fu_2328_p2;
                mul_ln1118_514_reg_2522 <= mul_ln1118_514_fu_2335_p2;
                mul_ln1118_515_reg_2536 <= mul_ln1118_515_fu_2342_p2;
                mul_ln1118_516_reg_2550 <= mul_ln1118_516_fu_2349_p2;
                mul_ln1118_517_reg_2564 <= mul_ln1118_517_fu_2356_p2;
                mul_ln1118_518_reg_2578 <= mul_ln1118_518_fu_2363_p2;
                mul_ln1118_reg_2480 <= mul_ln1118_fu_2314_p2;
                tmp_4097_reg_2487 <= mul_ln1118_fu_2314_p2(23 downto 23);
                tmp_4102_reg_2501 <= mul_ln1118_512_fu_2321_p2(23 downto 23);
                tmp_4107_reg_2515 <= mul_ln1118_513_fu_2328_p2(23 downto 23);
                tmp_4112_reg_2529 <= mul_ln1118_514_fu_2335_p2(23 downto 23);
                tmp_4117_reg_2543 <= mul_ln1118_515_fu_2342_p2(23 downto 23);
                tmp_4122_reg_2557 <= mul_ln1118_516_fu_2349_p2(23 downto 23);
                tmp_4127_reg_2571 <= mul_ln1118_517_fu_2356_p2(23 downto 23);
                tmp_4132_reg_2584 <= mul_ln1118_518_fu_2363_p2(22 downto 22);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                in_index_reg_2431 <= in_index_fu_548_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln172_fu_467_p1 = ap_const_lv1_0) and (icmp_ln166_fu_455_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                kernel_data_V_3_0 <= select_ln180_fu_471_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln166_fu_455_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (trunc_ln172_fu_467_p1 = ap_const_lv1_1))) then
                kernel_data_V_3_1 <= select_ln180_fu_471_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op359 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln360_reg_2412))) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                sX <= ap_phi_mux_storemerge_i_i_phi_fu_434_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_data_0_V_19_reg_2591 <= tmp_data_0_V_19_fu_922_p3;
                tmp_data_1_V_reg_2597 <= tmp_data_1_V_fu_1112_p3;
                tmp_data_2_V_reg_2603 <= tmp_data_2_V_fu_1302_p3;
                tmp_data_3_V_reg_2609 <= tmp_data_3_V_fu_1492_p3;
                tmp_data_4_V_reg_2615 <= tmp_data_4_V_fu_1682_p3;
                tmp_data_5_V_reg_2621 <= tmp_data_5_V_fu_1872_p3;
                tmp_data_6_V_reg_2627 <= tmp_data_6_V_fu_2062_p3;
                tmp_data_7_V_reg_2633 <= tmp_data_7_V_fu_2259_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, data_V_data_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state9, and_ln360_reg_2412, ap_CS_fsm_state3, ap_CS_fsm_state4, and_ln360_fu_525_p2, ap_enable_reg_pp1_iter3, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2, io_acc_block_signal_op359, icmp_ln64_fu_2308_p2, icmp_ln166_fu_455_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((data_V_data_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln166_fu_455_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_1 = and_ln360_fu_525_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                if ((not(((io_acc_block_signal_op359 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln360_reg_2412))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln64_fu_2308_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((io_acc_block_signal_op359 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln360_reg_2412))) and (icmp_ln64_fu_2308_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    acc_0_V_63_fu_914_p3 <= 
        ap_const_lv24_800000 when (and_ln786_1537_fu_882_p2(0) = '1') else 
        acc_0_V_fu_862_p2;
    acc_0_V_fu_862_p2 <= std_logic_vector(signed(select_ln340_2048_fu_832_p3) + signed(tmp_data_0_V_1419_reg_343));
    acc_1_V_63_fu_1104_p3 <= 
        ap_const_lv24_800000 when (and_ln786_1539_fu_1072_p2(0) = '1') else 
        acc_1_V_fu_1052_p2;
    acc_1_V_fu_1052_p2 <= std_logic_vector(signed(select_ln340_2050_fu_1022_p3) + signed(tmp_data_1_V_1117_reg_354));
    acc_2_V_63_fu_1294_p3 <= 
        ap_const_lv24_800000 when (and_ln786_1541_fu_1262_p2(0) = '1') else 
        acc_2_V_fu_1242_p2;
    acc_2_V_fu_1242_p2 <= std_logic_vector(signed(select_ln340_2052_fu_1212_p3) + signed(tmp_data_2_V_1115_reg_365));
    acc_3_V_63_fu_1484_p3 <= 
        ap_const_lv24_800000 when (and_ln786_1543_fu_1452_p2(0) = '1') else 
        acc_3_V_fu_1432_p2;
    acc_3_V_fu_1432_p2 <= std_logic_vector(signed(select_ln340_2054_fu_1402_p3) + signed(tmp_data_3_V_1113_reg_376));
    acc_4_V_63_fu_1674_p3 <= 
        ap_const_lv24_800000 when (and_ln786_1545_fu_1642_p2(0) = '1') else 
        acc_4_V_fu_1622_p2;
    acc_4_V_fu_1622_p2 <= std_logic_vector(signed(select_ln340_2056_fu_1592_p3) + signed(tmp_data_4_V_811_reg_387));
    acc_5_V_63_fu_1864_p3 <= 
        ap_const_lv24_800000 when (and_ln786_1547_fu_1832_p2(0) = '1') else 
        acc_5_V_fu_1812_p2;
    acc_5_V_fu_1812_p2 <= std_logic_vector(signed(select_ln340_2058_fu_1782_p3) + signed(tmp_data_5_V_89_reg_398));
    acc_6_V_63_fu_2054_p3 <= 
        ap_const_lv24_800000 when (and_ln786_1549_fu_2022_p2(0) = '1') else 
        acc_6_V_fu_2002_p2;
    acc_6_V_fu_2002_p2 <= std_logic_vector(signed(select_ln340_2060_fu_1972_p3) + signed(tmp_data_6_V_87_reg_409));
    acc_7_V_63_fu_2251_p3 <= 
        ap_const_lv24_800000 when (and_ln786_1551_fu_2219_p2(0) = '1') else 
        acc_7_V_fu_2199_p2;
    acc_7_V_fu_2199_p2 <= std_logic_vector(signed(select_ln340_2062_fu_2169_p3) + signed(tmp_data_7_V_85_reg_420));
    add_ln1192_512_fu_1038_p2 <= std_logic_vector(signed(sext_ln703_1025_fu_1030_p1) + signed(sext_ln703_1026_fu_1034_p1));
    add_ln1192_513_fu_1228_p2 <= std_logic_vector(signed(sext_ln703_1027_fu_1220_p1) + signed(sext_ln703_1028_fu_1224_p1));
    add_ln1192_514_fu_1418_p2 <= std_logic_vector(signed(sext_ln703_1029_fu_1410_p1) + signed(sext_ln703_1030_fu_1414_p1));
    add_ln1192_515_fu_1608_p2 <= std_logic_vector(signed(sext_ln703_1031_fu_1600_p1) + signed(sext_ln703_1032_fu_1604_p1));
    add_ln1192_516_fu_1798_p2 <= std_logic_vector(signed(sext_ln703_1033_fu_1790_p1) + signed(sext_ln703_1034_fu_1794_p1));
    add_ln1192_517_fu_1988_p2 <= std_logic_vector(signed(sext_ln703_1035_fu_1980_p1) + signed(sext_ln703_1036_fu_1984_p1));
    add_ln1192_518_fu_2185_p2 <= std_logic_vector(signed(sext_ln703_1037_fu_2177_p1) + signed(sext_ln703_1038_fu_2181_p1));
    add_ln1192_fu_848_p2 <= std_logic_vector(signed(sext_ln703_fu_840_p1) + signed(sext_ln703_1024_fu_844_p1));
    add_ln389_fu_2272_p2 <= std_logic_vector(unsigned(pX_load_reg_2406) + unsigned(ap_const_lv32_1));
    add_ln391_fu_2283_p2 <= std_logic_vector(unsigned(sX_load_reg_2396) + unsigned(ap_const_lv32_1));
    and_ln360_fu_525_p2 <= (icmp_ln360_fu_499_p2 and icmp_ln360_1_fu_519_p2);
    and_ln785_512_fu_953_p2 <= (xor_ln785_1_fu_948_p2 and tmp_4103_fu_940_p3);
    and_ln785_513_fu_1143_p2 <= (xor_ln785_2_fu_1138_p2 and tmp_4108_fu_1130_p3);
    and_ln785_514_fu_1333_p2 <= (xor_ln785_319_fu_1328_p2 and tmp_4113_fu_1320_p3);
    and_ln785_515_fu_1523_p2 <= (xor_ln785_4_fu_1518_p2 and tmp_4118_fu_1510_p3);
    and_ln785_516_fu_1713_p2 <= (xor_ln785_5_fu_1708_p2 and tmp_4123_fu_1700_p3);
    and_ln785_517_fu_1903_p2 <= (xor_ln785_6_fu_1898_p2 and tmp_4128_fu_1890_p3);
    and_ln785_518_fu_2099_p2 <= (xor_ln785_7_fu_2094_p2 and tmp_4133_fu_2086_p3);
    and_ln785_fu_763_p2 <= (xor_ln785_fu_758_p2 and tmp_4098_fu_750_p3);
    and_ln786_1536_fu_788_p2 <= (xor_ln786_1024_fu_782_p2 and tmp_4097_reg_2487);
    and_ln786_1537_fu_882_p2 <= (xor_ln786_fu_876_p2 and tmp_4100_fu_854_p3);
    and_ln786_1538_fu_978_p2 <= (xor_ln786_1025_fu_972_p2 and tmp_4102_reg_2501);
    and_ln786_1539_fu_1072_p2 <= (xor_ln786_1_fu_1066_p2 and tmp_4105_fu_1044_p3);
    and_ln786_1540_fu_1168_p2 <= (xor_ln786_1026_fu_1162_p2 and tmp_4107_reg_2515);
    and_ln786_1541_fu_1262_p2 <= (xor_ln786_2_fu_1256_p2 and tmp_4110_fu_1234_p3);
    and_ln786_1542_fu_1358_p2 <= (xor_ln786_1027_fu_1352_p2 and tmp_4112_reg_2529);
    and_ln786_1543_fu_1452_p2 <= (xor_ln786_3_fu_1446_p2 and tmp_4115_fu_1424_p3);
    and_ln786_1544_fu_1548_p2 <= (xor_ln786_1028_fu_1542_p2 and tmp_4117_reg_2543);
    and_ln786_1545_fu_1642_p2 <= (xor_ln786_4_fu_1636_p2 and tmp_4120_fu_1614_p3);
    and_ln786_1546_fu_1738_p2 <= (xor_ln786_1029_fu_1732_p2 and tmp_4122_reg_2557);
    and_ln786_1547_fu_1832_p2 <= (xor_ln786_5_fu_1826_p2 and tmp_4125_fu_1804_p3);
    and_ln786_1548_fu_1928_p2 <= (xor_ln786_1030_fu_1922_p2 and tmp_4127_reg_2571);
    and_ln786_1549_fu_2022_p2 <= (xor_ln786_6_fu_2016_p2 and tmp_4130_fu_1994_p3);
    and_ln786_1550_fu_2125_p2 <= (xor_ln786_1031_fu_2119_p2 and tmp_4132_reg_2584);
    and_ln786_1551_fu_2219_p2 <= (xor_ln786_7_fu_2213_p2 and tmp_4135_fu_2191_p3);
    and_ln786_1_fu_959_p2 <= (shl_ln731_1_fu_930_p2 and mul_ln1118_512_reg_2494);
    and_ln786_2_fu_1149_p2 <= (shl_ln731_2_fu_1120_p2 and mul_ln1118_513_reg_2508);
    and_ln786_3_fu_1339_p2 <= (shl_ln731_3_fu_1310_p2 and mul_ln1118_514_reg_2522);
    and_ln786_4_fu_1529_p2 <= (shl_ln731_4_fu_1500_p2 and mul_ln1118_515_reg_2536);
    and_ln786_5_fu_1719_p2 <= (shl_ln731_5_fu_1690_p2 and mul_ln1118_516_reg_2550);
    and_ln786_6_fu_1909_p2 <= (shl_ln731_6_fu_1880_p2 and mul_ln1118_517_reg_2564);
    and_ln786_7_fu_2105_p2 <= (shl_ln731_7_fu_2073_p3 and sext_ln1118_515_fu_2070_p1);
    and_ln786_fu_769_p2 <= (shl_ln731_fu_740_p2 and mul_ln1118_reg_2480);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state9 <= ap_CS_fsm(5);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state5_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_assign_proc : process(and_ln360_reg_2412, io_acc_block_signal_op359)
    begin
                ap_block_state9 <= ((io_acc_block_signal_op359 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln360_reg_2412));
    end process;


    ap_condition_286_assign_proc : process(ap_CS_fsm_state9, and_ln360_reg_2412, io_acc_block_signal_op359)
    begin
                ap_condition_286 <= (not(((io_acc_block_signal_op359 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln360_reg_2412))) and (ap_const_logic_1 = ap_CS_fsm_state9));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state9, and_ln360_reg_2412, io_acc_block_signal_op359, icmp_ln64_fu_2308_p2)
    begin
        if ((not(((io_acc_block_signal_op359 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln360_reg_2412))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln64_fu_2308_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_in_index21_phi_fu_336_p4_assign_proc : process(in_index21_reg_332, ap_CS_fsm_pp1_stage0, in_index_reg_2431, icmp_ln43_reg_2436, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln43_reg_2436 = ap_const_lv1_0))) then 
            ap_phi_mux_in_index21_phi_fu_336_p4 <= in_index_reg_2431;
        else 
            ap_phi_mux_in_index21_phi_fu_336_p4 <= in_index21_reg_332;
        end if; 
    end process;


    ap_phi_mux_storemerge_i_i_phi_fu_434_p4_assign_proc : process(ap_CS_fsm_state9, select_ln391_fu_2288_p3, icmp_ln384_fu_2267_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
            if ((icmp_ln384_fu_2267_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_storemerge_i_i_phi_fu_434_p4 <= ap_const_lv32_0;
            elsif ((icmp_ln384_fu_2267_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_storemerge_i_i_phi_fu_434_p4 <= select_ln391_fu_2288_p3;
            else 
                ap_phi_mux_storemerge_i_i_phi_fu_434_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_storemerge_i_i_phi_fu_434_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    data_V_data_V_blk_n_assign_proc : process(data_V_data_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_V_data_V_blk_n <= data_V_data_V_empty_n;
        else 
            data_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_V_read_assign_proc : process(data_V_data_V_empty_n, ap_CS_fsm_state2)
    begin
        if (((data_V_data_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_V_data_V_read <= ap_const_logic_1;
        else 
            data_V_data_V_read <= ap_const_logic_0;
        end if; 
    end process;

    i_iw_1_fu_449_p2 <= std_logic_vector(unsigned(i_iw_0_i22_reg_309) + unsigned(ap_const_lv7_1));
    i_iw_fu_461_p2 <= std_logic_vector(unsigned(i_iw_0_i_i_i_reg_321) + unsigned(ap_const_lv2_1));
    icmp_ln166_fu_455_p2 <= "1" when (i_iw_0_i_i_i_reg_321 = ap_const_lv2_2) else "0";
    icmp_ln360_1_fu_519_p2 <= "1" when (signed(tmp_4096_fu_509_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln360_fu_499_p2 <= "1" when (sX = ap_const_lv32_2) else "0";
    icmp_ln384_fu_2267_p2 <= "1" when (pX_load_reg_2406 = ap_const_lv32_41) else "0";
    icmp_ln43_fu_554_p2 <= "1" when (ap_phi_mux_in_index21_phi_fu_336_p4 = ap_const_lv2_2) else "0";
    icmp_ln64_fu_2308_p2 <= "1" when (i_iw_0_i22_reg_309 = ap_const_lv7_41) else "0";
    icmp_ln7_1_fu_537_p2 <= "1" when (ap_phi_mux_in_index21_phi_fu_336_p4 = ap_const_lv2_1) else "0";
    icmp_ln7_fu_531_p2 <= "1" when (ap_phi_mux_in_index21_phi_fu_336_p4 = ap_const_lv2_0) else "0";
    in_index_fu_548_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(ap_phi_mux_in_index21_phi_fu_336_p4));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state9, and_ln360_reg_2412, io_acc_block_signal_op359, icmp_ln64_fu_2308_p2)
    begin
        if ((not(((io_acc_block_signal_op359 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln360_reg_2412))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln64_fu_2308_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op359 <= (res_V_data_7_V_full_n and res_V_data_6_V_full_n and res_V_data_5_V_full_n and res_V_data_4_V_full_n and res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    mul_ln1118_512_fu_2321_p0 <= sext_ln1116_fu_652_p1(16 - 1 downto 0);
    mul_ln1118_513_fu_2328_p0 <= sext_ln1116_fu_652_p1(16 - 1 downto 0);
    mul_ln1118_514_fu_2335_p0 <= sext_ln1116_fu_652_p1(16 - 1 downto 0);
    mul_ln1118_515_fu_2342_p0 <= sext_ln1116_fu_652_p1(16 - 1 downto 0);
    mul_ln1118_516_fu_2349_p0 <= sext_ln1116_fu_652_p1(16 - 1 downto 0);
    mul_ln1118_517_fu_2356_p0 <= sext_ln1116_fu_652_p1(16 - 1 downto 0);
    mul_ln1118_fu_2314_p0 <= sext_ln1116_fu_652_p1(16 - 1 downto 0);
    or_ln340_1_fu_983_p2 <= (and_ln786_1538_fu_978_p2 or and_ln785_512_fu_953_p2);
    or_ln340_2048_fu_810_p2 <= (or_ln340_2064_fu_804_p2 or and_ln785_fu_763_p2);
    or_ln340_2049_fu_900_p2 <= (xor_ln340_512_fu_894_p2 or tmp_4101_fu_868_p3);
    or_ln340_2050_fu_1000_p2 <= (or_ln340_2065_fu_994_p2 or and_ln785_512_fu_953_p2);
    or_ln340_2051_fu_1090_p2 <= (xor_ln340_513_fu_1084_p2 or tmp_4106_fu_1058_p3);
    or_ln340_2052_fu_1190_p2 <= (or_ln340_2066_fu_1184_p2 or and_ln785_513_fu_1143_p2);
    or_ln340_2053_fu_1280_p2 <= (xor_ln340_514_fu_1274_p2 or tmp_4111_fu_1248_p3);
    or_ln340_2054_fu_1380_p2 <= (or_ln340_2067_fu_1374_p2 or and_ln785_514_fu_1333_p2);
    or_ln340_2055_fu_1470_p2 <= (xor_ln340_515_fu_1464_p2 or tmp_4116_fu_1438_p3);
    or_ln340_2056_fu_1570_p2 <= (or_ln340_2068_fu_1564_p2 or and_ln785_515_fu_1523_p2);
    or_ln340_2057_fu_1660_p2 <= (xor_ln340_516_fu_1654_p2 or tmp_4121_fu_1628_p3);
    or_ln340_2058_fu_1760_p2 <= (or_ln340_2069_fu_1754_p2 or and_ln785_516_fu_1713_p2);
    or_ln340_2059_fu_1850_p2 <= (xor_ln340_517_fu_1844_p2 or tmp_4126_fu_1818_p3);
    or_ln340_2060_fu_1950_p2 <= (or_ln340_2070_fu_1944_p2 or and_ln785_517_fu_1903_p2);
    or_ln340_2061_fu_2040_p2 <= (xor_ln340_518_fu_2034_p2 or tmp_4131_fu_2008_p3);
    or_ln340_2062_fu_2147_p2 <= (or_ln340_2071_fu_2141_p2 or and_ln785_518_fu_2099_p2);
    or_ln340_2063_fu_2237_p2 <= (xor_ln340_519_fu_2231_p2 or tmp_4136_fu_2205_p3);
    or_ln340_2064_fu_804_p2 <= (xor_ln340_1032_fu_799_p2 or tmp_4099_fu_774_p3);
    or_ln340_2065_fu_994_p2 <= (xor_ln340_fu_989_p2 or tmp_4104_fu_964_p3);
    or_ln340_2066_fu_1184_p2 <= (xor_ln340_1033_fu_1179_p2 or tmp_4109_fu_1154_p3);
    or_ln340_2067_fu_1374_p2 <= (xor_ln340_1034_fu_1369_p2 or tmp_4114_fu_1344_p3);
    or_ln340_2068_fu_1564_p2 <= (xor_ln340_1035_fu_1559_p2 or tmp_4119_fu_1534_p3);
    or_ln340_2069_fu_1754_p2 <= (xor_ln340_1036_fu_1749_p2 or tmp_4124_fu_1724_p3);
    or_ln340_2070_fu_1944_p2 <= (xor_ln340_1037_fu_1939_p2 or tmp_4129_fu_1914_p3);
    or_ln340_2071_fu_2141_p2 <= (xor_ln340_1038_fu_2136_p2 or tmp_4134_fu_2111_p3);
    or_ln340_2_fu_1173_p2 <= (and_ln786_1540_fu_1168_p2 or and_ln785_513_fu_1143_p2);
    or_ln340_3_fu_1363_p2 <= (and_ln786_1542_fu_1358_p2 or and_ln785_514_fu_1333_p2);
    or_ln340_420_fu_1553_p2 <= (and_ln786_1544_fu_1548_p2 or and_ln785_515_fu_1523_p2);
    or_ln340_522_fu_1743_p2 <= (and_ln786_1546_fu_1738_p2 or and_ln785_516_fu_1713_p2);
    or_ln340_6_fu_1933_p2 <= (and_ln786_1548_fu_1928_p2 or and_ln785_517_fu_1903_p2);
    or_ln340_7_fu_2130_p2 <= (and_ln786_1550_fu_2125_p2 or and_ln785_518_fu_2099_p2);
    or_ln340_fu_793_p2 <= (and_ln786_1536_fu_788_p2 or and_ln785_fu_763_p2);
    or_ln785_1_fu_935_p2 <= (shl_ln731_1_fu_930_p2 or mul_ln1118_512_reg_2494);
    or_ln785_218_fu_1125_p2 <= (shl_ln731_2_fu_1120_p2 or mul_ln1118_513_reg_2508);
    or_ln785_3_fu_1315_p2 <= (shl_ln731_3_fu_1310_p2 or mul_ln1118_514_reg_2522);
    or_ln785_4_fu_1505_p2 <= (shl_ln731_4_fu_1500_p2 or mul_ln1118_515_reg_2536);
    or_ln785_5_fu_1695_p2 <= (shl_ln731_5_fu_1690_p2 or mul_ln1118_516_reg_2550);
    or_ln785_6_fu_1885_p2 <= (shl_ln731_6_fu_1880_p2 or mul_ln1118_517_reg_2564);
    or_ln785_7_fu_2080_p2 <= (shl_ln731_7_fu_2073_p3 or sext_ln1118_515_fu_2070_p1);
    or_ln785_fu_745_p2 <= (shl_ln731_fu_740_p2 or mul_ln1118_reg_2480);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_CS_fsm_state9, and_ln360_reg_2412)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln360_reg_2412))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= tmp_data_0_V_19_reg_2591;

    res_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state9, and_ln360_reg_2412, io_acc_block_signal_op359)
    begin
        if ((not(((io_acc_block_signal_op359 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln360_reg_2412))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln360_reg_2412))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_CS_fsm_state9, and_ln360_reg_2412)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln360_reg_2412))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= tmp_data_1_V_reg_2597;

    res_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state9, and_ln360_reg_2412, io_acc_block_signal_op359)
    begin
        if ((not(((io_acc_block_signal_op359 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln360_reg_2412))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln360_reg_2412))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_CS_fsm_state9, and_ln360_reg_2412)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln360_reg_2412))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= tmp_data_2_V_reg_2603;

    res_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state9, and_ln360_reg_2412, io_acc_block_signal_op359)
    begin
        if ((not(((io_acc_block_signal_op359 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln360_reg_2412))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln360_reg_2412))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_CS_fsm_state9, and_ln360_reg_2412)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln360_reg_2412))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= tmp_data_3_V_reg_2609;

    res_V_data_3_V_write_assign_proc : process(ap_CS_fsm_state9, and_ln360_reg_2412, io_acc_block_signal_op359)
    begin
        if ((not(((io_acc_block_signal_op359 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln360_reg_2412))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln360_reg_2412))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_blk_n_assign_proc : process(res_V_data_4_V_full_n, ap_CS_fsm_state9, and_ln360_reg_2412)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln360_reg_2412))) then 
            res_V_data_4_V_blk_n <= res_V_data_4_V_full_n;
        else 
            res_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_4_V_din <= tmp_data_4_V_reg_2615;

    res_V_data_4_V_write_assign_proc : process(ap_CS_fsm_state9, and_ln360_reg_2412, io_acc_block_signal_op359)
    begin
        if ((not(((io_acc_block_signal_op359 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln360_reg_2412))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln360_reg_2412))) then 
            res_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_blk_n_assign_proc : process(res_V_data_5_V_full_n, ap_CS_fsm_state9, and_ln360_reg_2412)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln360_reg_2412))) then 
            res_V_data_5_V_blk_n <= res_V_data_5_V_full_n;
        else 
            res_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_5_V_din <= tmp_data_5_V_reg_2621;

    res_V_data_5_V_write_assign_proc : process(ap_CS_fsm_state9, and_ln360_reg_2412, io_acc_block_signal_op359)
    begin
        if ((not(((io_acc_block_signal_op359 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln360_reg_2412))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln360_reg_2412))) then 
            res_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_blk_n_assign_proc : process(res_V_data_6_V_full_n, ap_CS_fsm_state9, and_ln360_reg_2412)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln360_reg_2412))) then 
            res_V_data_6_V_blk_n <= res_V_data_6_V_full_n;
        else 
            res_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_6_V_din <= tmp_data_6_V_reg_2627;

    res_V_data_6_V_write_assign_proc : process(ap_CS_fsm_state9, and_ln360_reg_2412, io_acc_block_signal_op359)
    begin
        if ((not(((io_acc_block_signal_op359 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln360_reg_2412))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln360_reg_2412))) then 
            res_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_blk_n_assign_proc : process(res_V_data_7_V_full_n, ap_CS_fsm_state9, and_ln360_reg_2412)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln360_reg_2412))) then 
            res_V_data_7_V_blk_n <= res_V_data_7_V_full_n;
        else 
            res_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_7_V_din <= tmp_data_7_V_reg_2633;

    res_V_data_7_V_write_assign_proc : process(ap_CS_fsm_state9, and_ln360_reg_2412, io_acc_block_signal_op359)
    begin
        if ((not(((io_acc_block_signal_op359 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln360_reg_2412))) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln360_reg_2412))) then 
            res_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln180_fu_471_p3 <= 
        kernel_data_V_3_2_load_reg_2375 when (trunc_ln172_fu_467_p1(0) = '1') else 
        kernel_data_V_3_1;
    select_ln340_1024_fu_906_p3 <= 
        ap_const_lv24_7FFFFF when (xor_ln340_1024_fu_888_p2(0) = '1') else 
        acc_0_V_fu_862_p2;
    select_ln340_1025_fu_1096_p3 <= 
        ap_const_lv24_7FFFFF when (xor_ln340_1025_fu_1078_p2(0) = '1') else 
        acc_1_V_fu_1052_p2;
    select_ln340_1026_fu_1286_p3 <= 
        ap_const_lv24_7FFFFF when (xor_ln340_1026_fu_1268_p2(0) = '1') else 
        acc_2_V_fu_1242_p2;
    select_ln340_1027_fu_1476_p3 <= 
        ap_const_lv24_7FFFFF when (xor_ln340_1027_fu_1458_p2(0) = '1') else 
        acc_3_V_fu_1432_p2;
    select_ln340_1028_fu_1666_p3 <= 
        ap_const_lv24_7FFFFF when (xor_ln340_1028_fu_1648_p2(0) = '1') else 
        acc_4_V_fu_1622_p2;
    select_ln340_1029_fu_1856_p3 <= 
        ap_const_lv24_7FFFFF when (xor_ln340_1029_fu_1838_p2(0) = '1') else 
        acc_5_V_fu_1812_p2;
    select_ln340_1030_fu_2046_p3 <= 
        ap_const_lv24_7FFFFF when (xor_ln340_1030_fu_2028_p2(0) = '1') else 
        acc_6_V_fu_2002_p2;
    select_ln340_1031_fu_2243_p3 <= 
        ap_const_lv24_7FFFFF when (xor_ln340_1031_fu_2225_p2(0) = '1') else 
        acc_7_V_fu_2199_p2;
    select_ln340_1_fu_1006_p3 <= 
        ap_const_lv24_7FFFFF when (or_ln340_1_fu_983_p2(0) = '1') else 
        shl_ln731_1_fu_930_p2;
    select_ln340_2048_fu_832_p3 <= 
        select_ln340_fu_816_p3 when (or_ln340_2048_fu_810_p2(0) = '1') else 
        select_ln388_fu_824_p3;
    select_ln340_2050_fu_1022_p3 <= 
        select_ln340_1_fu_1006_p3 when (or_ln340_2050_fu_1000_p2(0) = '1') else 
        select_ln388_1_fu_1014_p3;
    select_ln340_2052_fu_1212_p3 <= 
        select_ln340_2_fu_1196_p3 when (or_ln340_2052_fu_1190_p2(0) = '1') else 
        select_ln388_2_fu_1204_p3;
    select_ln340_2054_fu_1402_p3 <= 
        select_ln340_3_fu_1386_p3 when (or_ln340_2054_fu_1380_p2(0) = '1') else 
        select_ln388_3_fu_1394_p3;
    select_ln340_2056_fu_1592_p3 <= 
        select_ln340_4_fu_1576_p3 when (or_ln340_2056_fu_1570_p2(0) = '1') else 
        select_ln388_4_fu_1584_p3;
    select_ln340_2058_fu_1782_p3 <= 
        select_ln340_5_fu_1766_p3 when (or_ln340_2058_fu_1760_p2(0) = '1') else 
        select_ln388_5_fu_1774_p3;
    select_ln340_2060_fu_1972_p3 <= 
        select_ln340_6_fu_1956_p3 when (or_ln340_2060_fu_1950_p2(0) = '1') else 
        select_ln388_6_fu_1964_p3;
    select_ln340_2062_fu_2169_p3 <= 
        select_ln340_7_fu_2153_p3 when (or_ln340_2062_fu_2147_p2(0) = '1') else 
        select_ln388_7_fu_2161_p3;
    select_ln340_2_fu_1196_p3 <= 
        ap_const_lv24_7FFFFF when (or_ln340_2_fu_1173_p2(0) = '1') else 
        shl_ln731_2_fu_1120_p2;
    select_ln340_3_fu_1386_p3 <= 
        ap_const_lv24_7FFFFF when (or_ln340_3_fu_1363_p2(0) = '1') else 
        shl_ln731_3_fu_1310_p2;
    select_ln340_4_fu_1576_p3 <= 
        ap_const_lv24_7FFFFF when (or_ln340_420_fu_1553_p2(0) = '1') else 
        shl_ln731_4_fu_1500_p2;
    select_ln340_5_fu_1766_p3 <= 
        ap_const_lv24_7FFFFF when (or_ln340_522_fu_1743_p2(0) = '1') else 
        shl_ln731_5_fu_1690_p2;
    select_ln340_6_fu_1956_p3 <= 
        ap_const_lv24_7FFFFF when (or_ln340_6_fu_1933_p2(0) = '1') else 
        shl_ln731_6_fu_1880_p2;
    select_ln340_7_fu_2153_p3 <= 
        ap_const_lv24_7FFFFF when (or_ln340_7_fu_2130_p2(0) = '1') else 
        shl_ln731_7_fu_2073_p3;
    select_ln340_fu_816_p3 <= 
        ap_const_lv24_7FFFFF when (or_ln340_fu_793_p2(0) = '1') else 
        shl_ln731_fu_740_p2;
    select_ln388_1_fu_1014_p3 <= 
        ap_const_lv24_800000 when (and_ln786_1538_fu_978_p2(0) = '1') else 
        shl_ln731_1_fu_930_p2;
    select_ln388_2_fu_1204_p3 <= 
        ap_const_lv24_800000 when (and_ln786_1540_fu_1168_p2(0) = '1') else 
        shl_ln731_2_fu_1120_p2;
    select_ln388_3_fu_1394_p3 <= 
        ap_const_lv24_800000 when (and_ln786_1542_fu_1358_p2(0) = '1') else 
        shl_ln731_3_fu_1310_p2;
    select_ln388_4_fu_1584_p3 <= 
        ap_const_lv24_800000 when (and_ln786_1544_fu_1548_p2(0) = '1') else 
        shl_ln731_4_fu_1500_p2;
    select_ln388_5_fu_1774_p3 <= 
        ap_const_lv24_800000 when (and_ln786_1546_fu_1738_p2(0) = '1') else 
        shl_ln731_5_fu_1690_p2;
    select_ln388_6_fu_1964_p3 <= 
        ap_const_lv24_800000 when (and_ln786_1548_fu_1928_p2(0) = '1') else 
        shl_ln731_6_fu_1880_p2;
    select_ln388_7_fu_2161_p3 <= 
        ap_const_lv24_800000 when (and_ln786_1550_fu_2125_p2(0) = '1') else 
        shl_ln731_7_fu_2073_p3;
    select_ln388_fu_824_p3 <= 
        ap_const_lv24_800000 when (and_ln786_1536_fu_788_p2(0) = '1') else 
        shl_ln731_fu_740_p2;
    select_ln391_fu_2288_p3 <= 
        ap_const_lv32_2 when (icmp_ln360_reg_2401(0) = '1') else 
        add_ln391_fu_2283_p2;
    select_ln7_1_fu_645_p3 <= 
        kernel_data_V_3_1 when (icmp_ln7_1_reg_2421_pp1_iter1_reg(0) = '1') else 
        select_ln7_fu_638_p3;
    select_ln7_fu_638_p3 <= 
        kernel_data_V_3_0 when (icmp_ln7_reg_2416_pp1_iter1_reg(0) = '1') else 
        kernel_data_V_3_2;
        sext_ln1116_fu_652_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln7_1_fu_645_p3),24));

        sext_ln1118_515_fu_2070_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_518_reg_2578),24));

        sext_ln703_1024_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_2048_fu_832_p3),25));

        sext_ln703_1025_fu_1030_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_1_V_1117_reg_354),25));

        sext_ln703_1026_fu_1034_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_2050_fu_1022_p3),25));

        sext_ln703_1027_fu_1220_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_2_V_1115_reg_365),25));

        sext_ln703_1028_fu_1224_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_2052_fu_1212_p3),25));

        sext_ln703_1029_fu_1410_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_3_V_1113_reg_376),25));

        sext_ln703_1030_fu_1414_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_2054_fu_1402_p3),25));

        sext_ln703_1031_fu_1600_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_4_V_811_reg_387),25));

        sext_ln703_1032_fu_1604_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_2056_fu_1592_p3),25));

        sext_ln703_1033_fu_1790_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_5_V_89_reg_398),25));

        sext_ln703_1034_fu_1794_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_2058_fu_1782_p3),25));

        sext_ln703_1035_fu_1980_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_6_V_87_reg_409),25));

        sext_ln703_1036_fu_1984_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_2060_fu_1972_p3),25));

        sext_ln703_1037_fu_2177_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_7_V_85_reg_420),25));

        sext_ln703_1038_fu_2181_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln340_2062_fu_2169_p3),25));

        sext_ln703_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_0_V_1419_reg_343),25));

    shl_ln731_1_fu_930_p2 <= std_logic_vector(shift_left(unsigned(mul_ln1118_512_reg_2494),to_integer(unsigned('0' & ap_const_lv24_1(24-1 downto 0)))));
    shl_ln731_2_fu_1120_p2 <= std_logic_vector(shift_left(unsigned(mul_ln1118_513_reg_2508),to_integer(unsigned('0' & ap_const_lv24_1(24-1 downto 0)))));
    shl_ln731_3_fu_1310_p2 <= std_logic_vector(shift_left(unsigned(mul_ln1118_514_reg_2522),to_integer(unsigned('0' & ap_const_lv24_1(24-1 downto 0)))));
    shl_ln731_4_fu_1500_p2 <= std_logic_vector(shift_left(unsigned(mul_ln1118_515_reg_2536),to_integer(unsigned('0' & ap_const_lv24_1(24-1 downto 0)))));
    shl_ln731_5_fu_1690_p2 <= std_logic_vector(shift_left(unsigned(mul_ln1118_516_reg_2550),to_integer(unsigned('0' & ap_const_lv24_1(24-1 downto 0)))));
    shl_ln731_6_fu_1880_p2 <= std_logic_vector(shift_left(unsigned(mul_ln1118_517_reg_2564),to_integer(unsigned('0' & ap_const_lv24_1(24-1 downto 0)))));
    shl_ln731_7_fu_2073_p3 <= (mul_ln1118_518_reg_2578 & ap_const_lv1_0);
    shl_ln731_fu_740_p2 <= std_logic_vector(shift_left(unsigned(mul_ln1118_reg_2480),to_integer(unsigned('0' & ap_const_lv24_1(24-1 downto 0)))));
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_4096_fu_509_p4 <= pX(31 downto 1);
    tmp_4098_fu_750_p3 <= or_ln785_fu_745_p2(23 downto 23);
    tmp_4099_fu_774_p3 <= and_ln786_fu_769_p2(23 downto 23);
    tmp_4100_fu_854_p3 <= add_ln1192_fu_848_p2(24 downto 24);
    tmp_4101_fu_868_p3 <= acc_0_V_fu_862_p2(23 downto 23);
    tmp_4103_fu_940_p3 <= or_ln785_1_fu_935_p2(23 downto 23);
    tmp_4104_fu_964_p3 <= and_ln786_1_fu_959_p2(23 downto 23);
    tmp_4105_fu_1044_p3 <= add_ln1192_512_fu_1038_p2(24 downto 24);
    tmp_4106_fu_1058_p3 <= acc_1_V_fu_1052_p2(23 downto 23);
    tmp_4108_fu_1130_p3 <= or_ln785_218_fu_1125_p2(23 downto 23);
    tmp_4109_fu_1154_p3 <= and_ln786_2_fu_1149_p2(23 downto 23);
    tmp_4110_fu_1234_p3 <= add_ln1192_513_fu_1228_p2(24 downto 24);
    tmp_4111_fu_1248_p3 <= acc_2_V_fu_1242_p2(23 downto 23);
    tmp_4113_fu_1320_p3 <= or_ln785_3_fu_1315_p2(23 downto 23);
    tmp_4114_fu_1344_p3 <= and_ln786_3_fu_1339_p2(23 downto 23);
    tmp_4115_fu_1424_p3 <= add_ln1192_514_fu_1418_p2(24 downto 24);
    tmp_4116_fu_1438_p3 <= acc_3_V_fu_1432_p2(23 downto 23);
    tmp_4118_fu_1510_p3 <= or_ln785_4_fu_1505_p2(23 downto 23);
    tmp_4119_fu_1534_p3 <= and_ln786_4_fu_1529_p2(23 downto 23);
    tmp_4120_fu_1614_p3 <= add_ln1192_515_fu_1608_p2(24 downto 24);
    tmp_4121_fu_1628_p3 <= acc_4_V_fu_1622_p2(23 downto 23);
    tmp_4123_fu_1700_p3 <= or_ln785_5_fu_1695_p2(23 downto 23);
    tmp_4124_fu_1724_p3 <= and_ln786_5_fu_1719_p2(23 downto 23);
    tmp_4125_fu_1804_p3 <= add_ln1192_516_fu_1798_p2(24 downto 24);
    tmp_4126_fu_1818_p3 <= acc_5_V_fu_1812_p2(23 downto 23);
    tmp_4128_fu_1890_p3 <= or_ln785_6_fu_1885_p2(23 downto 23);
    tmp_4129_fu_1914_p3 <= and_ln786_6_fu_1909_p2(23 downto 23);
    tmp_4130_fu_1994_p3 <= add_ln1192_517_fu_1988_p2(24 downto 24);
    tmp_4131_fu_2008_p3 <= acc_6_V_fu_2002_p2(23 downto 23);
    tmp_4133_fu_2086_p3 <= or_ln785_7_fu_2080_p2(23 downto 23);
    tmp_4134_fu_2111_p3 <= and_ln786_7_fu_2105_p2(23 downto 23);
    tmp_4135_fu_2191_p3 <= add_ln1192_518_fu_2185_p2(24 downto 24);
    tmp_4136_fu_2205_p3 <= acc_7_V_fu_2199_p2(23 downto 23);
    tmp_data_0_V_19_fu_922_p3 <= 
        select_ln340_1024_fu_906_p3 when (or_ln340_2049_fu_900_p2(0) = '1') else 
        acc_0_V_63_fu_914_p3;
    tmp_data_1_V_fu_1112_p3 <= 
        select_ln340_1025_fu_1096_p3 when (or_ln340_2051_fu_1090_p2(0) = '1') else 
        acc_1_V_63_fu_1104_p3;
    tmp_data_2_V_fu_1302_p3 <= 
        select_ln340_1026_fu_1286_p3 when (or_ln340_2053_fu_1280_p2(0) = '1') else 
        acc_2_V_63_fu_1294_p3;
    tmp_data_3_V_fu_1492_p3 <= 
        select_ln340_1027_fu_1476_p3 when (or_ln340_2055_fu_1470_p2(0) = '1') else 
        acc_3_V_63_fu_1484_p3;
    tmp_data_4_V_fu_1682_p3 <= 
        select_ln340_1028_fu_1666_p3 when (or_ln340_2057_fu_1660_p2(0) = '1') else 
        acc_4_V_63_fu_1674_p3;
    tmp_data_5_V_fu_1872_p3 <= 
        select_ln340_1029_fu_1856_p3 when (or_ln340_2059_fu_1850_p2(0) = '1') else 
        acc_5_V_63_fu_1864_p3;
    tmp_data_6_V_fu_2062_p3 <= 
        select_ln340_1030_fu_2046_p3 when (or_ln340_2061_fu_2040_p2(0) = '1') else 
        acc_6_V_63_fu_2054_p3;
    tmp_data_7_V_fu_2259_p3 <= 
        select_ln340_1031_fu_2243_p3 when (or_ln340_2063_fu_2237_p2(0) = '1') else 
        acc_7_V_63_fu_2251_p3;
    trunc_ln172_fu_467_p1 <= i_iw_0_i_i_i_reg_321(1 - 1 downto 0);
    trunc_ln56_fu_560_p1 <= w2_V_q0(8 - 1 downto 0);
    w2_V_address0 <= zext_ln56_fu_543_p1(2 - 1 downto 0);

    w2_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            w2_V_ce0 <= ap_const_logic_1;
        else 
            w2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln340_1024_fu_888_p2 <= (tmp_4101_fu_868_p3 xor tmp_4100_fu_854_p3);
    xor_ln340_1025_fu_1078_p2 <= (tmp_4106_fu_1058_p3 xor tmp_4105_fu_1044_p3);
    xor_ln340_1026_fu_1268_p2 <= (tmp_4111_fu_1248_p3 xor tmp_4110_fu_1234_p3);
    xor_ln340_1027_fu_1458_p2 <= (tmp_4116_fu_1438_p3 xor tmp_4115_fu_1424_p3);
    xor_ln340_1028_fu_1648_p2 <= (tmp_4121_fu_1628_p3 xor tmp_4120_fu_1614_p3);
    xor_ln340_1029_fu_1838_p2 <= (tmp_4126_fu_1818_p3 xor tmp_4125_fu_1804_p3);
    xor_ln340_1030_fu_2028_p2 <= (tmp_4131_fu_2008_p3 xor tmp_4130_fu_1994_p3);
    xor_ln340_1031_fu_2225_p2 <= (tmp_4136_fu_2205_p3 xor tmp_4135_fu_2191_p3);
    xor_ln340_1032_fu_799_p2 <= (tmp_4097_reg_2487 xor ap_const_lv1_1);
    xor_ln340_1033_fu_1179_p2 <= (tmp_4107_reg_2515 xor ap_const_lv1_1);
    xor_ln340_1034_fu_1369_p2 <= (tmp_4112_reg_2529 xor ap_const_lv1_1);
    xor_ln340_1035_fu_1559_p2 <= (tmp_4117_reg_2543 xor ap_const_lv1_1);
    xor_ln340_1036_fu_1749_p2 <= (tmp_4122_reg_2557 xor ap_const_lv1_1);
    xor_ln340_1037_fu_1939_p2 <= (tmp_4127_reg_2571 xor ap_const_lv1_1);
    xor_ln340_1038_fu_2136_p2 <= (tmp_4132_reg_2584 xor ap_const_lv1_1);
    xor_ln340_512_fu_894_p2 <= (tmp_4100_fu_854_p3 xor ap_const_lv1_1);
    xor_ln340_513_fu_1084_p2 <= (tmp_4105_fu_1044_p3 xor ap_const_lv1_1);
    xor_ln340_514_fu_1274_p2 <= (tmp_4110_fu_1234_p3 xor ap_const_lv1_1);
    xor_ln340_515_fu_1464_p2 <= (tmp_4115_fu_1424_p3 xor ap_const_lv1_1);
    xor_ln340_516_fu_1654_p2 <= (tmp_4120_fu_1614_p3 xor ap_const_lv1_1);
    xor_ln340_517_fu_1844_p2 <= (tmp_4125_fu_1804_p3 xor ap_const_lv1_1);
    xor_ln340_518_fu_2034_p2 <= (tmp_4130_fu_1994_p3 xor ap_const_lv1_1);
    xor_ln340_519_fu_2231_p2 <= (tmp_4135_fu_2191_p3 xor ap_const_lv1_1);
    xor_ln340_fu_989_p2 <= (tmp_4102_reg_2501 xor ap_const_lv1_1);
    xor_ln785_1_fu_948_p2 <= (tmp_4102_reg_2501 xor ap_const_lv1_1);
    xor_ln785_2_fu_1138_p2 <= (tmp_4107_reg_2515 xor ap_const_lv1_1);
    xor_ln785_319_fu_1328_p2 <= (tmp_4112_reg_2529 xor ap_const_lv1_1);
    xor_ln785_4_fu_1518_p2 <= (tmp_4117_reg_2543 xor ap_const_lv1_1);
    xor_ln785_5_fu_1708_p2 <= (tmp_4122_reg_2557 xor ap_const_lv1_1);
    xor_ln785_6_fu_1898_p2 <= (tmp_4127_reg_2571 xor ap_const_lv1_1);
    xor_ln785_7_fu_2094_p2 <= (tmp_4132_reg_2584 xor ap_const_lv1_1);
    xor_ln785_fu_758_p2 <= (tmp_4097_reg_2487 xor ap_const_lv1_1);
    xor_ln786_1024_fu_782_p2 <= (tmp_4099_fu_774_p3 xor ap_const_lv1_1);
    xor_ln786_1025_fu_972_p2 <= (tmp_4104_fu_964_p3 xor ap_const_lv1_1);
    xor_ln786_1026_fu_1162_p2 <= (tmp_4109_fu_1154_p3 xor ap_const_lv1_1);
    xor_ln786_1027_fu_1352_p2 <= (tmp_4114_fu_1344_p3 xor ap_const_lv1_1);
    xor_ln786_1028_fu_1542_p2 <= (tmp_4119_fu_1534_p3 xor ap_const_lv1_1);
    xor_ln786_1029_fu_1732_p2 <= (tmp_4124_fu_1724_p3 xor ap_const_lv1_1);
    xor_ln786_1030_fu_1922_p2 <= (tmp_4129_fu_1914_p3 xor ap_const_lv1_1);
    xor_ln786_1031_fu_2119_p2 <= (tmp_4134_fu_2111_p3 xor ap_const_lv1_1);
    xor_ln786_1_fu_1066_p2 <= (tmp_4106_fu_1058_p3 xor ap_const_lv1_1);
    xor_ln786_2_fu_1256_p2 <= (tmp_4111_fu_1248_p3 xor ap_const_lv1_1);
    xor_ln786_3_fu_1446_p2 <= (tmp_4116_fu_1438_p3 xor ap_const_lv1_1);
    xor_ln786_4_fu_1636_p2 <= (tmp_4121_fu_1628_p3 xor ap_const_lv1_1);
    xor_ln786_5_fu_1826_p2 <= (tmp_4126_fu_1818_p3 xor ap_const_lv1_1);
    xor_ln786_6_fu_2016_p2 <= (tmp_4131_fu_2008_p3 xor ap_const_lv1_1);
    xor_ln786_7_fu_2213_p2 <= (tmp_4136_fu_2205_p3 xor ap_const_lv1_1);
    xor_ln786_fu_876_p2 <= (tmp_4101_fu_868_p3 xor ap_const_lv1_1);
    zext_ln56_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_in_index21_phi_fu_336_p4),64));
end behav;
