-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity linear_array_array_ap_fixed_16_16_0_0_0_16u_linear_config17_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    data_V_data_4_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    data_V_data_4_V_empty_n : IN STD_LOGIC;
    data_V_data_4_V_read : OUT STD_LOGIC;
    data_V_data_5_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    data_V_data_5_V_empty_n : IN STD_LOGIC;
    data_V_data_5_V_read : OUT STD_LOGIC;
    data_V_data_6_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    data_V_data_6_V_empty_n : IN STD_LOGIC;
    data_V_data_6_V_read : OUT STD_LOGIC;
    data_V_data_7_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    data_V_data_7_V_empty_n : IN STD_LOGIC;
    data_V_data_7_V_read : OUT STD_LOGIC;
    data_V_data_8_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    data_V_data_8_V_empty_n : IN STD_LOGIC;
    data_V_data_8_V_read : OUT STD_LOGIC;
    data_V_data_9_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    data_V_data_9_V_empty_n : IN STD_LOGIC;
    data_V_data_9_V_read : OUT STD_LOGIC;
    data_V_data_10_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    data_V_data_10_V_empty_n : IN STD_LOGIC;
    data_V_data_10_V_read : OUT STD_LOGIC;
    data_V_data_11_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    data_V_data_11_V_empty_n : IN STD_LOGIC;
    data_V_data_11_V_read : OUT STD_LOGIC;
    data_V_data_12_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    data_V_data_12_V_empty_n : IN STD_LOGIC;
    data_V_data_12_V_read : OUT STD_LOGIC;
    data_V_data_13_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    data_V_data_13_V_empty_n : IN STD_LOGIC;
    data_V_data_13_V_read : OUT STD_LOGIC;
    data_V_data_14_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    data_V_data_14_V_empty_n : IN STD_LOGIC;
    data_V_data_14_V_read : OUT STD_LOGIC;
    data_V_data_15_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    data_V_data_15_V_empty_n : IN STD_LOGIC;
    data_V_data_15_V_read : OUT STD_LOGIC;
    res_V_data_0_V_TREADY : IN STD_LOGIC;
    res_V_data_0_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_TVALID : OUT STD_LOGIC;
    res_V_data_1_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_TVALID : OUT STD_LOGIC;
    res_V_data_1_V_TREADY : IN STD_LOGIC;
    res_V_data_2_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_TVALID : OUT STD_LOGIC;
    res_V_data_2_V_TREADY : IN STD_LOGIC;
    res_V_data_3_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_TVALID : OUT STD_LOGIC;
    res_V_data_3_V_TREADY : IN STD_LOGIC;
    res_V_data_4_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_4_V_TVALID : OUT STD_LOGIC;
    res_V_data_4_V_TREADY : IN STD_LOGIC;
    res_V_data_5_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_5_V_TVALID : OUT STD_LOGIC;
    res_V_data_5_V_TREADY : IN STD_LOGIC;
    res_V_data_6_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_6_V_TVALID : OUT STD_LOGIC;
    res_V_data_6_V_TREADY : IN STD_LOGIC;
    res_V_data_7_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_7_V_TVALID : OUT STD_LOGIC;
    res_V_data_7_V_TREADY : IN STD_LOGIC;
    res_V_data_8_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_8_V_TVALID : OUT STD_LOGIC;
    res_V_data_8_V_TREADY : IN STD_LOGIC;
    res_V_data_9_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_9_V_TVALID : OUT STD_LOGIC;
    res_V_data_9_V_TREADY : IN STD_LOGIC;
    res_V_data_10_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_10_V_TVALID : OUT STD_LOGIC;
    res_V_data_10_V_TREADY : IN STD_LOGIC;
    res_V_data_11_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_11_V_TVALID : OUT STD_LOGIC;
    res_V_data_11_V_TREADY : IN STD_LOGIC;
    res_V_data_12_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_12_V_TVALID : OUT STD_LOGIC;
    res_V_data_12_V_TREADY : IN STD_LOGIC;
    res_V_data_13_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_13_V_TVALID : OUT STD_LOGIC;
    res_V_data_13_V_TREADY : IN STD_LOGIC;
    res_V_data_14_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_14_V_TVALID : OUT STD_LOGIC;
    res_V_data_14_V_TREADY : IN STD_LOGIC;
    res_V_data_15_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_15_V_TVALID : OUT STD_LOGIC;
    res_V_data_15_V_TREADY : IN STD_LOGIC );
end;


architecture behav of linear_array_array_ap_fixed_16_16_0_0_0_16u_linear_config17_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal io_acc_block_signal_op3 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal regslice_both_res_V_data_0_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_1_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_2_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_3_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_4_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_5_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_6_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_7_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_8_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_9_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_10_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_11_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_12_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_13_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_14_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_V_data_15_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal data_V_data_4_V_blk_n : STD_LOGIC;
    signal data_V_data_5_V_blk_n : STD_LOGIC;
    signal data_V_data_6_V_blk_n : STD_LOGIC;
    signal data_V_data_7_V_blk_n : STD_LOGIC;
    signal data_V_data_8_V_blk_n : STD_LOGIC;
    signal data_V_data_9_V_blk_n : STD_LOGIC;
    signal data_V_data_10_V_blk_n : STD_LOGIC;
    signal data_V_data_11_V_blk_n : STD_LOGIC;
    signal data_V_data_12_V_blk_n : STD_LOGIC;
    signal data_V_data_13_V_blk_n : STD_LOGIC;
    signal data_V_data_14_V_blk_n : STD_LOGIC;
    signal data_V_data_15_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_1_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_2_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_3_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_4_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_5_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_6_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_7_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_8_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_9_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_10_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_11_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_12_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_13_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_14_V_TDATA_blk_n : STD_LOGIC;
    signal res_V_data_15_V_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_2_fu_476_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_fu_484_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln_fu_466_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_fu_488_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_520_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_1_fu_528_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_1_fu_510_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_1_fu_532_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_fu_564_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_2_fu_572_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_2_fu_554_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_2_fu_576_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_608_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_3_fu_616_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_3_fu_598_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_3_fu_620_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_fu_652_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_4_fu_660_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_4_fu_642_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_4_fu_664_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_fu_696_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_5_fu_704_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_5_fu_686_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_5_fu_708_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_fu_740_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_6_fu_748_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_6_fu_730_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_6_fu_752_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_fu_784_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_7_fu_792_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_7_fu_774_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_7_fu_796_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_fu_828_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_8_fu_836_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_8_fu_818_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_8_fu_840_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_fu_872_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_9_fu_880_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_9_fu_862_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_9_fu_884_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_32_fu_916_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_10_fu_924_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_s_fu_906_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_10_fu_928_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_fu_960_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_11_fu_968_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_10_fu_950_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_11_fu_972_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_fu_1004_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_12_fu_1012_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_11_fu_994_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_12_fu_1016_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_fu_986_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_1022_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_12_fu_1030_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_41_fu_1065_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_13_fu_1073_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_12_fu_1055_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_13_fu_1077_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_40_fu_1047_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_1083_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_13_fu_1091_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_44_fu_1126_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_14_fu_1134_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_13_fu_1116_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_14_fu_1138_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_43_fu_1108_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_1144_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_14_fu_1152_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_47_fu_1187_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_15_fu_1195_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_14_fu_1177_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_15_fu_1199_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_46_fu_1169_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_1205_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_15_fu_1213_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_458_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_494_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_32_fu_1230_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_502_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_538_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_33_fu_1247_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_546_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_582_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_34_fu_1264_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_fu_590_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_626_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_35_fu_1281_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_634_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_670_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_36_fu_1298_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_fu_678_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_714_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_37_fu_1315_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_fu_722_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_758_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_38_fu_1332_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_fu_766_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_802_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_39_fu_1349_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_25_fu_810_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_846_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_40_fu_1366_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_fu_854_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_890_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_41_fu_1383_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_31_fu_898_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_934_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_42_fu_1400_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_fu_942_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_978_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_43_fu_1417_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal res_V_data_0_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_0_V_TVALID_int : STD_LOGIC;
    signal res_V_data_0_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_0_V_U_vld_out : STD_LOGIC;
    signal res_V_data_1_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_1_V_TVALID_int : STD_LOGIC;
    signal res_V_data_1_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_1_V_U_vld_out : STD_LOGIC;
    signal res_V_data_2_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_2_V_TVALID_int : STD_LOGIC;
    signal res_V_data_2_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_2_V_U_vld_out : STD_LOGIC;
    signal res_V_data_3_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_3_V_TVALID_int : STD_LOGIC;
    signal res_V_data_3_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_3_V_U_vld_out : STD_LOGIC;
    signal res_V_data_4_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_4_V_TVALID_int : STD_LOGIC;
    signal res_V_data_4_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_4_V_U_vld_out : STD_LOGIC;
    signal res_V_data_5_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_5_V_TVALID_int : STD_LOGIC;
    signal res_V_data_5_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_5_V_U_vld_out : STD_LOGIC;
    signal res_V_data_6_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_6_V_TVALID_int : STD_LOGIC;
    signal res_V_data_6_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_6_V_U_vld_out : STD_LOGIC;
    signal res_V_data_7_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_7_V_TVALID_int : STD_LOGIC;
    signal res_V_data_7_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_7_V_U_vld_out : STD_LOGIC;
    signal res_V_data_8_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_8_V_TVALID_int : STD_LOGIC;
    signal res_V_data_8_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_8_V_U_vld_out : STD_LOGIC;
    signal res_V_data_9_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_9_V_TVALID_int : STD_LOGIC;
    signal res_V_data_9_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_9_V_U_vld_out : STD_LOGIC;
    signal res_V_data_10_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_10_V_TVALID_int : STD_LOGIC;
    signal res_V_data_10_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_10_V_U_vld_out : STD_LOGIC;
    signal res_V_data_11_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_11_V_TVALID_int : STD_LOGIC;
    signal res_V_data_11_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_11_V_U_vld_out : STD_LOGIC;
    signal res_V_data_12_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_12_V_TVALID_int : STD_LOGIC;
    signal res_V_data_12_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_12_V_U_vld_out : STD_LOGIC;
    signal res_V_data_13_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_13_V_TVALID_int : STD_LOGIC;
    signal res_V_data_13_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_13_V_U_vld_out : STD_LOGIC;
    signal res_V_data_14_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_14_V_TVALID_int : STD_LOGIC;
    signal res_V_data_14_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_14_V_U_vld_out : STD_LOGIC;
    signal res_V_data_15_V_TDATA_int : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_data_15_V_TVALID_int : STD_LOGIC;
    signal res_V_data_15_V_TREADY_int : STD_LOGIC;
    signal regslice_both_res_V_data_15_V_U_vld_out : STD_LOGIC;

    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_res_V_data_0_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_0_V_TDATA_int,
        vld_in => res_V_data_0_V_TVALID_int,
        ack_in => res_V_data_0_V_TREADY_int,
        data_out => res_V_data_0_V_TDATA,
        vld_out => regslice_both_res_V_data_0_V_U_vld_out,
        ack_out => res_V_data_0_V_TREADY,
        apdone_blk => regslice_both_res_V_data_0_V_U_apdone_blk);

    regslice_both_res_V_data_1_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_1_V_TDATA_int,
        vld_in => res_V_data_1_V_TVALID_int,
        ack_in => res_V_data_1_V_TREADY_int,
        data_out => res_V_data_1_V_TDATA,
        vld_out => regslice_both_res_V_data_1_V_U_vld_out,
        ack_out => res_V_data_1_V_TREADY,
        apdone_blk => regslice_both_res_V_data_1_V_U_apdone_blk);

    regslice_both_res_V_data_2_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_2_V_TDATA_int,
        vld_in => res_V_data_2_V_TVALID_int,
        ack_in => res_V_data_2_V_TREADY_int,
        data_out => res_V_data_2_V_TDATA,
        vld_out => regslice_both_res_V_data_2_V_U_vld_out,
        ack_out => res_V_data_2_V_TREADY,
        apdone_blk => regslice_both_res_V_data_2_V_U_apdone_blk);

    regslice_both_res_V_data_3_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_3_V_TDATA_int,
        vld_in => res_V_data_3_V_TVALID_int,
        ack_in => res_V_data_3_V_TREADY_int,
        data_out => res_V_data_3_V_TDATA,
        vld_out => regslice_both_res_V_data_3_V_U_vld_out,
        ack_out => res_V_data_3_V_TREADY,
        apdone_blk => regslice_both_res_V_data_3_V_U_apdone_blk);

    regslice_both_res_V_data_4_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_4_V_TDATA_int,
        vld_in => res_V_data_4_V_TVALID_int,
        ack_in => res_V_data_4_V_TREADY_int,
        data_out => res_V_data_4_V_TDATA,
        vld_out => regslice_both_res_V_data_4_V_U_vld_out,
        ack_out => res_V_data_4_V_TREADY,
        apdone_blk => regslice_both_res_V_data_4_V_U_apdone_blk);

    regslice_both_res_V_data_5_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_5_V_TDATA_int,
        vld_in => res_V_data_5_V_TVALID_int,
        ack_in => res_V_data_5_V_TREADY_int,
        data_out => res_V_data_5_V_TDATA,
        vld_out => regslice_both_res_V_data_5_V_U_vld_out,
        ack_out => res_V_data_5_V_TREADY,
        apdone_blk => regslice_both_res_V_data_5_V_U_apdone_blk);

    regslice_both_res_V_data_6_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_6_V_TDATA_int,
        vld_in => res_V_data_6_V_TVALID_int,
        ack_in => res_V_data_6_V_TREADY_int,
        data_out => res_V_data_6_V_TDATA,
        vld_out => regslice_both_res_V_data_6_V_U_vld_out,
        ack_out => res_V_data_6_V_TREADY,
        apdone_blk => regslice_both_res_V_data_6_V_U_apdone_blk);

    regslice_both_res_V_data_7_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_7_V_TDATA_int,
        vld_in => res_V_data_7_V_TVALID_int,
        ack_in => res_V_data_7_V_TREADY_int,
        data_out => res_V_data_7_V_TDATA,
        vld_out => regslice_both_res_V_data_7_V_U_vld_out,
        ack_out => res_V_data_7_V_TREADY,
        apdone_blk => regslice_both_res_V_data_7_V_U_apdone_blk);

    regslice_both_res_V_data_8_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_8_V_TDATA_int,
        vld_in => res_V_data_8_V_TVALID_int,
        ack_in => res_V_data_8_V_TREADY_int,
        data_out => res_V_data_8_V_TDATA,
        vld_out => regslice_both_res_V_data_8_V_U_vld_out,
        ack_out => res_V_data_8_V_TREADY,
        apdone_blk => regslice_both_res_V_data_8_V_U_apdone_blk);

    regslice_both_res_V_data_9_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_9_V_TDATA_int,
        vld_in => res_V_data_9_V_TVALID_int,
        ack_in => res_V_data_9_V_TREADY_int,
        data_out => res_V_data_9_V_TDATA,
        vld_out => regslice_both_res_V_data_9_V_U_vld_out,
        ack_out => res_V_data_9_V_TREADY,
        apdone_blk => regslice_both_res_V_data_9_V_U_apdone_blk);

    regslice_both_res_V_data_10_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_10_V_TDATA_int,
        vld_in => res_V_data_10_V_TVALID_int,
        ack_in => res_V_data_10_V_TREADY_int,
        data_out => res_V_data_10_V_TDATA,
        vld_out => regslice_both_res_V_data_10_V_U_vld_out,
        ack_out => res_V_data_10_V_TREADY,
        apdone_blk => regslice_both_res_V_data_10_V_U_apdone_blk);

    regslice_both_res_V_data_11_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_11_V_TDATA_int,
        vld_in => res_V_data_11_V_TVALID_int,
        ack_in => res_V_data_11_V_TREADY_int,
        data_out => res_V_data_11_V_TDATA,
        vld_out => regslice_both_res_V_data_11_V_U_vld_out,
        ack_out => res_V_data_11_V_TREADY,
        apdone_blk => regslice_both_res_V_data_11_V_U_apdone_blk);

    regslice_both_res_V_data_12_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_12_V_TDATA_int,
        vld_in => res_V_data_12_V_TVALID_int,
        ack_in => res_V_data_12_V_TREADY_int,
        data_out => res_V_data_12_V_TDATA,
        vld_out => regslice_both_res_V_data_12_V_U_vld_out,
        ack_out => res_V_data_12_V_TREADY,
        apdone_blk => regslice_both_res_V_data_12_V_U_apdone_blk);

    regslice_both_res_V_data_13_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_13_V_TDATA_int,
        vld_in => res_V_data_13_V_TVALID_int,
        ack_in => res_V_data_13_V_TREADY_int,
        data_out => res_V_data_13_V_TDATA,
        vld_out => regslice_both_res_V_data_13_V_U_vld_out,
        ack_out => res_V_data_13_V_TREADY,
        apdone_blk => regslice_both_res_V_data_13_V_U_apdone_blk);

    regslice_both_res_V_data_14_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_14_V_TDATA_int,
        vld_in => res_V_data_14_V_TVALID_int,
        ack_in => res_V_data_14_V_TREADY_int,
        data_out => res_V_data_14_V_TDATA,
        vld_out => regslice_both_res_V_data_14_V_U_vld_out,
        ack_out => res_V_data_14_V_TREADY,
        apdone_blk => regslice_both_res_V_data_14_V_U_apdone_blk);

    regslice_both_res_V_data_15_V_U : component regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => res_V_data_15_V_TDATA_int,
        vld_in => res_V_data_15_V_TVALID_int,
        ack_in => res_V_data_15_V_TREADY_int,
        data_out => res_V_data_15_V_TDATA,
        vld_out => regslice_both_res_V_data_15_V_U_vld_out,
        ack_out => res_V_data_15_V_TREADY,
        apdone_blk => regslice_both_res_V_data_15_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln415_10_fu_928_p2 <= std_logic_vector(unsigned(zext_ln415_10_fu_924_p1) + unsigned(trunc_ln708_s_fu_906_p4));
    add_ln415_11_fu_972_p2 <= std_logic_vector(unsigned(zext_ln415_11_fu_968_p1) + unsigned(trunc_ln708_10_fu_950_p4));
    add_ln415_12_fu_1016_p2 <= std_logic_vector(unsigned(zext_ln415_12_fu_1012_p1) + unsigned(trunc_ln708_11_fu_994_p4));
    add_ln415_13_fu_1077_p2 <= std_logic_vector(unsigned(zext_ln415_13_fu_1073_p1) + unsigned(trunc_ln708_12_fu_1055_p4));
    add_ln415_14_fu_1138_p2 <= std_logic_vector(unsigned(zext_ln415_14_fu_1134_p1) + unsigned(trunc_ln708_13_fu_1116_p4));
    add_ln415_15_fu_1199_p2 <= std_logic_vector(unsigned(zext_ln415_15_fu_1195_p1) + unsigned(trunc_ln708_14_fu_1177_p4));
    add_ln415_1_fu_532_p2 <= std_logic_vector(unsigned(zext_ln415_1_fu_528_p1) + unsigned(trunc_ln708_1_fu_510_p4));
    add_ln415_2_fu_576_p2 <= std_logic_vector(unsigned(zext_ln415_2_fu_572_p1) + unsigned(trunc_ln708_2_fu_554_p4));
    add_ln415_3_fu_620_p2 <= std_logic_vector(unsigned(zext_ln415_3_fu_616_p1) + unsigned(trunc_ln708_3_fu_598_p4));
    add_ln415_4_fu_664_p2 <= std_logic_vector(unsigned(zext_ln415_4_fu_660_p1) + unsigned(trunc_ln708_4_fu_642_p4));
    add_ln415_5_fu_708_p2 <= std_logic_vector(unsigned(zext_ln415_5_fu_704_p1) + unsigned(trunc_ln708_5_fu_686_p4));
    add_ln415_6_fu_752_p2 <= std_logic_vector(unsigned(zext_ln415_6_fu_748_p1) + unsigned(trunc_ln708_6_fu_730_p4));
    add_ln415_7_fu_796_p2 <= std_logic_vector(unsigned(zext_ln415_7_fu_792_p1) + unsigned(trunc_ln708_7_fu_774_p4));
    add_ln415_8_fu_840_p2 <= std_logic_vector(unsigned(zext_ln415_8_fu_836_p1) + unsigned(trunc_ln708_8_fu_818_p4));
    add_ln415_9_fu_884_p2 <= std_logic_vector(unsigned(zext_ln415_9_fu_880_p1) + unsigned(trunc_ln708_9_fu_862_p4));
    add_ln415_fu_488_p2 <= std_logic_vector(unsigned(zext_ln415_fu_484_p1) + unsigned(trunc_ln_fu_466_p4));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, io_acc_block_signal_op3, regslice_both_res_V_data_0_V_U_apdone_blk, regslice_both_res_V_data_1_V_U_apdone_blk, regslice_both_res_V_data_2_V_U_apdone_blk, regslice_both_res_V_data_3_V_U_apdone_blk, regslice_both_res_V_data_4_V_U_apdone_blk, regslice_both_res_V_data_5_V_U_apdone_blk, regslice_both_res_V_data_6_V_U_apdone_blk, regslice_both_res_V_data_7_V_U_apdone_blk, regslice_both_res_V_data_8_V_U_apdone_blk, regslice_both_res_V_data_9_V_U_apdone_blk, regslice_both_res_V_data_10_V_U_apdone_blk, regslice_both_res_V_data_11_V_U_apdone_blk, regslice_both_res_V_data_12_V_U_apdone_blk, regslice_both_res_V_data_13_V_U_apdone_blk, regslice_both_res_V_data_14_V_U_apdone_blk, regslice_both_res_V_data_15_V_U_apdone_blk)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((io_acc_block_signal_op3 = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((regslice_both_res_V_data_15_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_14_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_13_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_12_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_11_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_10_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_9_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_8_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_7_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_6_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_5_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_4_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_3_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_2_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_1_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_0_V_U_apdone_blk = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, io_acc_block_signal_op3, regslice_both_res_V_data_0_V_U_apdone_blk, regslice_both_res_V_data_1_V_U_apdone_blk, regslice_both_res_V_data_2_V_U_apdone_blk, regslice_both_res_V_data_3_V_U_apdone_blk, regslice_both_res_V_data_4_V_U_apdone_blk, regslice_both_res_V_data_5_V_U_apdone_blk, regslice_both_res_V_data_6_V_U_apdone_blk, regslice_both_res_V_data_7_V_U_apdone_blk, regslice_both_res_V_data_8_V_U_apdone_blk, regslice_both_res_V_data_9_V_U_apdone_blk, regslice_both_res_V_data_10_V_U_apdone_blk, regslice_both_res_V_data_11_V_U_apdone_blk, regslice_both_res_V_data_12_V_U_apdone_blk, regslice_both_res_V_data_13_V_U_apdone_blk, regslice_both_res_V_data_14_V_U_apdone_blk, regslice_both_res_V_data_15_V_U_apdone_blk, res_V_data_0_V_TREADY_int)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((io_acc_block_signal_op3 = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (res_V_data_0_V_TREADY_int = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((res_V_data_0_V_TREADY_int = ap_const_logic_0) or (regslice_both_res_V_data_15_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_14_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_13_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_12_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_11_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_10_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_9_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_8_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_7_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_6_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_5_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_4_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_3_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_2_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_1_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_0_V_U_apdone_blk = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, io_acc_block_signal_op3, regslice_both_res_V_data_0_V_U_apdone_blk, regslice_both_res_V_data_1_V_U_apdone_blk, regslice_both_res_V_data_2_V_U_apdone_blk, regslice_both_res_V_data_3_V_U_apdone_blk, regslice_both_res_V_data_4_V_U_apdone_blk, regslice_both_res_V_data_5_V_U_apdone_blk, regslice_both_res_V_data_6_V_U_apdone_blk, regslice_both_res_V_data_7_V_U_apdone_blk, regslice_both_res_V_data_8_V_U_apdone_blk, regslice_both_res_V_data_9_V_U_apdone_blk, regslice_both_res_V_data_10_V_U_apdone_blk, regslice_both_res_V_data_11_V_U_apdone_blk, regslice_both_res_V_data_12_V_U_apdone_blk, regslice_both_res_V_data_13_V_U_apdone_blk, regslice_both_res_V_data_14_V_U_apdone_blk, regslice_both_res_V_data_15_V_U_apdone_blk, res_V_data_0_V_TREADY_int)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((io_acc_block_signal_op3 = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (res_V_data_0_V_TREADY_int = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((res_V_data_0_V_TREADY_int = ap_const_logic_0) or (regslice_both_res_V_data_15_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_14_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_13_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_12_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_11_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_10_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_9_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_8_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_7_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_6_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_5_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_4_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_3_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_2_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_1_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_0_V_U_apdone_blk = ap_const_logic_1))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, io_acc_block_signal_op3)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((io_acc_block_signal_op3 = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(regslice_both_res_V_data_0_V_U_apdone_blk, regslice_both_res_V_data_1_V_U_apdone_blk, regslice_both_res_V_data_2_V_U_apdone_blk, regslice_both_res_V_data_3_V_U_apdone_blk, regslice_both_res_V_data_4_V_U_apdone_blk, regslice_both_res_V_data_5_V_U_apdone_blk, regslice_both_res_V_data_6_V_U_apdone_blk, regslice_both_res_V_data_7_V_U_apdone_blk, regslice_both_res_V_data_8_V_U_apdone_blk, regslice_both_res_V_data_9_V_U_apdone_blk, regslice_both_res_V_data_10_V_U_apdone_blk, regslice_both_res_V_data_11_V_U_apdone_blk, regslice_both_res_V_data_12_V_U_apdone_blk, regslice_both_res_V_data_13_V_U_apdone_blk, regslice_both_res_V_data_14_V_U_apdone_blk, regslice_both_res_V_data_15_V_U_apdone_blk)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((regslice_both_res_V_data_15_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_14_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_13_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_12_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_11_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_10_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_9_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_8_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_7_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_6_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_5_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_4_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_3_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_2_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_1_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_res_V_data_0_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_0_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_0_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_10_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_10_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_10_V_blk_n <= data_V_data_10_V_empty_n;
        else 
            data_V_data_10_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_10_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_10_V_read <= ap_const_logic_1;
        else 
            data_V_data_10_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_11_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_11_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_11_V_blk_n <= data_V_data_11_V_empty_n;
        else 
            data_V_data_11_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_11_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_11_V_read <= ap_const_logic_1;
        else 
            data_V_data_11_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_12_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_12_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_12_V_blk_n <= data_V_data_12_V_empty_n;
        else 
            data_V_data_12_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_12_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_12_V_read <= ap_const_logic_1;
        else 
            data_V_data_12_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_13_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_13_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_13_V_blk_n <= data_V_data_13_V_empty_n;
        else 
            data_V_data_13_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_13_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_13_V_read <= ap_const_logic_1;
        else 
            data_V_data_13_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_14_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_14_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_14_V_blk_n <= data_V_data_14_V_empty_n;
        else 
            data_V_data_14_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_14_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_14_V_read <= ap_const_logic_1;
        else 
            data_V_data_14_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_15_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_15_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_15_V_blk_n <= data_V_data_15_V_empty_n;
        else 
            data_V_data_15_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_15_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_15_V_read <= ap_const_logic_1;
        else 
            data_V_data_15_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_1_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_2_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_3_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_4_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_4_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_4_V_blk_n <= data_V_data_4_V_empty_n;
        else 
            data_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_4_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_4_V_read <= ap_const_logic_1;
        else 
            data_V_data_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_5_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_5_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_5_V_blk_n <= data_V_data_5_V_empty_n;
        else 
            data_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_5_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_5_V_read <= ap_const_logic_1;
        else 
            data_V_data_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_6_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_6_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_6_V_blk_n <= data_V_data_6_V_empty_n;
        else 
            data_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_6_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_6_V_read <= ap_const_logic_1;
        else 
            data_V_data_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_7_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_7_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_7_V_blk_n <= data_V_data_7_V_empty_n;
        else 
            data_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_7_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_7_V_read <= ap_const_logic_1;
        else 
            data_V_data_7_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_8_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_8_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_8_V_blk_n <= data_V_data_8_V_empty_n;
        else 
            data_V_data_8_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_8_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_8_V_read <= ap_const_logic_1;
        else 
            data_V_data_8_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_9_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, data_V_data_9_V_empty_n, ap_block_pp0_stage0)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_data_9_V_blk_n <= data_V_data_9_V_empty_n;
        else 
            data_V_data_9_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_9_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            data_V_data_9_V_read <= ap_const_logic_1;
        else 
            data_V_data_9_V_read <= ap_const_logic_0;
        end if; 
    end process;

    empty_32_fu_1230_p3 <= 
        add_ln415_fu_488_p2 when (tmp_1_fu_458_p3(0) = '1') else 
        ap_const_lv16_7FFF;
    empty_33_fu_1247_p3 <= 
        add_ln415_1_fu_532_p2 when (tmp_4_fu_502_p3(0) = '1') else 
        ap_const_lv16_7FFF;
    empty_34_fu_1264_p3 <= 
        add_ln415_2_fu_576_p2 when (tmp_7_fu_546_p3(0) = '1') else 
        ap_const_lv16_7FFF;
    empty_35_fu_1281_p3 <= 
        add_ln415_3_fu_620_p2 when (tmp_10_fu_590_p3(0) = '1') else 
        ap_const_lv16_7FFF;
    empty_36_fu_1298_p3 <= 
        add_ln415_4_fu_664_p2 when (tmp_13_fu_634_p3(0) = '1') else 
        ap_const_lv16_7FFF;
    empty_37_fu_1315_p3 <= 
        add_ln415_5_fu_708_p2 when (tmp_16_fu_678_p3(0) = '1') else 
        ap_const_lv16_7FFF;
    empty_38_fu_1332_p3 <= 
        add_ln415_6_fu_752_p2 when (tmp_19_fu_722_p3(0) = '1') else 
        ap_const_lv16_7FFF;
    empty_39_fu_1349_p3 <= 
        add_ln415_7_fu_796_p2 when (tmp_22_fu_766_p3(0) = '1') else 
        ap_const_lv16_7FFF;
    empty_40_fu_1366_p3 <= 
        add_ln415_8_fu_840_p2 when (tmp_25_fu_810_p3(0) = '1') else 
        ap_const_lv16_7FFF;
    empty_41_fu_1383_p3 <= 
        add_ln415_9_fu_884_p2 when (tmp_28_fu_854_p3(0) = '1') else 
        ap_const_lv16_7FFF;
    empty_42_fu_1400_p3 <= 
        add_ln415_10_fu_928_p2 when (tmp_31_fu_898_p3(0) = '1') else 
        ap_const_lv16_7FFF;
    empty_43_fu_1417_p3 <= 
        add_ln415_11_fu_972_p2 when (tmp_34_fu_942_p3(0) = '1') else 
        ap_const_lv16_7FFF;
    io_acc_block_signal_op3 <= (data_V_data_9_V_empty_n and data_V_data_8_V_empty_n and data_V_data_7_V_empty_n and data_V_data_6_V_empty_n and data_V_data_5_V_empty_n and data_V_data_4_V_empty_n and data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_15_V_empty_n and data_V_data_14_V_empty_n and data_V_data_13_V_empty_n and data_V_data_12_V_empty_n and data_V_data_11_V_empty_n and data_V_data_10_V_empty_n and data_V_data_0_V_empty_n);
    phitmp_12_fu_1030_p3 <= 
        add_ln415_12_fu_1016_p2 when (tmp_37_fu_986_p3(0) = '1') else 
        ap_const_lv16_7FFF;
    phitmp_13_fu_1091_p3 <= 
        add_ln415_13_fu_1077_p2 when (tmp_40_fu_1047_p3(0) = '1') else 
        ap_const_lv16_7FFF;
    phitmp_14_fu_1152_p3 <= 
        add_ln415_14_fu_1138_p2 when (tmp_43_fu_1108_p3(0) = '1') else 
        ap_const_lv16_7FFF;
    phitmp_15_fu_1213_p3 <= 
        add_ln415_15_fu_1199_p2 when (tmp_46_fu_1169_p3(0) = '1') else 
        ap_const_lv16_7FFF;

    res_V_data_0_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, res_V_data_0_V_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            res_V_data_0_V_TDATA_blk_n <= res_V_data_0_V_TREADY_int;
        else 
            res_V_data_0_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_TDATA_int <= 
        empty_32_fu_1230_p3 when (tmp_3_fu_494_p3(0) = '1') else 
        add_ln415_fu_488_p2;
    res_V_data_0_V_TVALID <= regslice_both_res_V_data_0_V_U_vld_out;

    res_V_data_0_V_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_0_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_0_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_10_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, res_V_data_10_V_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            res_V_data_10_V_TDATA_blk_n <= res_V_data_10_V_TREADY_int;
        else 
            res_V_data_10_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_10_V_TDATA_int <= 
        empty_42_fu_1400_p3 when (tmp_33_fu_934_p3(0) = '1') else 
        add_ln415_10_fu_928_p2;
    res_V_data_10_V_TVALID <= regslice_both_res_V_data_10_V_U_vld_out;

    res_V_data_10_V_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_10_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_10_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_11_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, res_V_data_11_V_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            res_V_data_11_V_TDATA_blk_n <= res_V_data_11_V_TREADY_int;
        else 
            res_V_data_11_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_11_V_TDATA_int <= 
        empty_43_fu_1417_p3 when (tmp_36_fu_978_p3(0) = '1') else 
        add_ln415_11_fu_972_p2;
    res_V_data_11_V_TVALID <= regslice_both_res_V_data_11_V_U_vld_out;

    res_V_data_11_V_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_11_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_11_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_12_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, res_V_data_12_V_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            res_V_data_12_V_TDATA_blk_n <= res_V_data_12_V_TREADY_int;
        else 
            res_V_data_12_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_12_V_TDATA_int <= 
        phitmp_12_fu_1030_p3 when (tmp_39_fu_1022_p3(0) = '1') else 
        add_ln415_12_fu_1016_p2;
    res_V_data_12_V_TVALID <= regslice_both_res_V_data_12_V_U_vld_out;

    res_V_data_12_V_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_12_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_12_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_13_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, res_V_data_13_V_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            res_V_data_13_V_TDATA_blk_n <= res_V_data_13_V_TREADY_int;
        else 
            res_V_data_13_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_13_V_TDATA_int <= 
        phitmp_13_fu_1091_p3 when (tmp_42_fu_1083_p3(0) = '1') else 
        add_ln415_13_fu_1077_p2;
    res_V_data_13_V_TVALID <= regslice_both_res_V_data_13_V_U_vld_out;

    res_V_data_13_V_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_13_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_13_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_14_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, res_V_data_14_V_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            res_V_data_14_V_TDATA_blk_n <= res_V_data_14_V_TREADY_int;
        else 
            res_V_data_14_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_14_V_TDATA_int <= 
        phitmp_14_fu_1152_p3 when (tmp_45_fu_1144_p3(0) = '1') else 
        add_ln415_14_fu_1138_p2;
    res_V_data_14_V_TVALID <= regslice_both_res_V_data_14_V_U_vld_out;

    res_V_data_14_V_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_14_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_14_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_15_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, res_V_data_15_V_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            res_V_data_15_V_TDATA_blk_n <= res_V_data_15_V_TREADY_int;
        else 
            res_V_data_15_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_15_V_TDATA_int <= 
        phitmp_15_fu_1213_p3 when (tmp_48_fu_1205_p3(0) = '1') else 
        add_ln415_15_fu_1199_p2;
    res_V_data_15_V_TVALID <= regslice_both_res_V_data_15_V_U_vld_out;

    res_V_data_15_V_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_15_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_15_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, res_V_data_1_V_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            res_V_data_1_V_TDATA_blk_n <= res_V_data_1_V_TREADY_int;
        else 
            res_V_data_1_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_TDATA_int <= 
        empty_33_fu_1247_p3 when (tmp_6_fu_538_p3(0) = '1') else 
        add_ln415_1_fu_532_p2;
    res_V_data_1_V_TVALID <= regslice_both_res_V_data_1_V_U_vld_out;

    res_V_data_1_V_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_1_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_1_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, res_V_data_2_V_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            res_V_data_2_V_TDATA_blk_n <= res_V_data_2_V_TREADY_int;
        else 
            res_V_data_2_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_TDATA_int <= 
        empty_34_fu_1264_p3 when (tmp_9_fu_582_p3(0) = '1') else 
        add_ln415_2_fu_576_p2;
    res_V_data_2_V_TVALID <= regslice_both_res_V_data_2_V_U_vld_out;

    res_V_data_2_V_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_2_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_2_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, res_V_data_3_V_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            res_V_data_3_V_TDATA_blk_n <= res_V_data_3_V_TREADY_int;
        else 
            res_V_data_3_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_TDATA_int <= 
        empty_35_fu_1281_p3 when (tmp_12_fu_626_p3(0) = '1') else 
        add_ln415_3_fu_620_p2;
    res_V_data_3_V_TVALID <= regslice_both_res_V_data_3_V_U_vld_out;

    res_V_data_3_V_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_3_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_3_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, res_V_data_4_V_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            res_V_data_4_V_TDATA_blk_n <= res_V_data_4_V_TREADY_int;
        else 
            res_V_data_4_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_4_V_TDATA_int <= 
        empty_36_fu_1298_p3 when (tmp_15_fu_670_p3(0) = '1') else 
        add_ln415_4_fu_664_p2;
    res_V_data_4_V_TVALID <= regslice_both_res_V_data_4_V_U_vld_out;

    res_V_data_4_V_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_4_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_4_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, res_V_data_5_V_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            res_V_data_5_V_TDATA_blk_n <= res_V_data_5_V_TREADY_int;
        else 
            res_V_data_5_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_5_V_TDATA_int <= 
        empty_37_fu_1315_p3 when (tmp_18_fu_714_p3(0) = '1') else 
        add_ln415_5_fu_708_p2;
    res_V_data_5_V_TVALID <= regslice_both_res_V_data_5_V_U_vld_out;

    res_V_data_5_V_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_5_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_5_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, res_V_data_6_V_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            res_V_data_6_V_TDATA_blk_n <= res_V_data_6_V_TREADY_int;
        else 
            res_V_data_6_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_6_V_TDATA_int <= 
        empty_38_fu_1332_p3 when (tmp_21_fu_758_p3(0) = '1') else 
        add_ln415_6_fu_752_p2;
    res_V_data_6_V_TVALID <= regslice_both_res_V_data_6_V_U_vld_out;

    res_V_data_6_V_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_6_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_6_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, res_V_data_7_V_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            res_V_data_7_V_TDATA_blk_n <= res_V_data_7_V_TREADY_int;
        else 
            res_V_data_7_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_7_V_TDATA_int <= 
        empty_39_fu_1349_p3 when (tmp_24_fu_802_p3(0) = '1') else 
        add_ln415_7_fu_796_p2;
    res_V_data_7_V_TVALID <= regslice_both_res_V_data_7_V_U_vld_out;

    res_V_data_7_V_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_7_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_7_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_8_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, res_V_data_8_V_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            res_V_data_8_V_TDATA_blk_n <= res_V_data_8_V_TREADY_int;
        else 
            res_V_data_8_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_8_V_TDATA_int <= 
        empty_40_fu_1366_p3 when (tmp_27_fu_846_p3(0) = '1') else 
        add_ln415_8_fu_840_p2;
    res_V_data_8_V_TVALID <= regslice_both_res_V_data_8_V_U_vld_out;

    res_V_data_8_V_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_8_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_8_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_9_V_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, res_V_data_9_V_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            res_V_data_9_V_TDATA_blk_n <= res_V_data_9_V_TREADY_int;
        else 
            res_V_data_9_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_9_V_TDATA_int <= 
        empty_41_fu_1383_p3 when (tmp_30_fu_890_p3(0) = '1') else 
        add_ln415_9_fu_884_p2;
    res_V_data_9_V_TVALID <= regslice_both_res_V_data_9_V_U_vld_out;

    res_V_data_9_V_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            res_V_data_9_V_TVALID_int <= ap_const_logic_1;
        else 
            res_V_data_9_V_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_590_p3 <= data_V_data_3_V_dout(23 downto 23);
    tmp_11_fu_608_p3 <= data_V_data_3_V_dout(7 downto 7);
    tmp_12_fu_626_p3 <= add_ln415_3_fu_620_p2(15 downto 15);
    tmp_13_fu_634_p3 <= data_V_data_4_V_dout(23 downto 23);
    tmp_14_fu_652_p3 <= data_V_data_4_V_dout(7 downto 7);
    tmp_15_fu_670_p3 <= add_ln415_4_fu_664_p2(15 downto 15);
    tmp_16_fu_678_p3 <= data_V_data_5_V_dout(23 downto 23);
    tmp_17_fu_696_p3 <= data_V_data_5_V_dout(7 downto 7);
    tmp_18_fu_714_p3 <= add_ln415_5_fu_708_p2(15 downto 15);
    tmp_19_fu_722_p3 <= data_V_data_6_V_dout(23 downto 23);
    tmp_1_fu_458_p3 <= data_V_data_0_V_dout(23 downto 23);
    tmp_20_fu_740_p3 <= data_V_data_6_V_dout(7 downto 7);
    tmp_21_fu_758_p3 <= add_ln415_6_fu_752_p2(15 downto 15);
    tmp_22_fu_766_p3 <= data_V_data_7_V_dout(23 downto 23);
    tmp_23_fu_784_p3 <= data_V_data_7_V_dout(7 downto 7);
    tmp_24_fu_802_p3 <= add_ln415_7_fu_796_p2(15 downto 15);
    tmp_25_fu_810_p3 <= data_V_data_8_V_dout(23 downto 23);
    tmp_26_fu_828_p3 <= data_V_data_8_V_dout(7 downto 7);
    tmp_27_fu_846_p3 <= add_ln415_8_fu_840_p2(15 downto 15);
    tmp_28_fu_854_p3 <= data_V_data_9_V_dout(23 downto 23);
    tmp_29_fu_872_p3 <= data_V_data_9_V_dout(7 downto 7);
    tmp_2_fu_476_p3 <= data_V_data_0_V_dout(7 downto 7);
    tmp_30_fu_890_p3 <= add_ln415_9_fu_884_p2(15 downto 15);
    tmp_31_fu_898_p3 <= data_V_data_10_V_dout(23 downto 23);
    tmp_32_fu_916_p3 <= data_V_data_10_V_dout(7 downto 7);
    tmp_33_fu_934_p3 <= add_ln415_10_fu_928_p2(15 downto 15);
    tmp_34_fu_942_p3 <= data_V_data_11_V_dout(23 downto 23);
    tmp_35_fu_960_p3 <= data_V_data_11_V_dout(7 downto 7);
    tmp_36_fu_978_p3 <= add_ln415_11_fu_972_p2(15 downto 15);
    tmp_37_fu_986_p3 <= data_V_data_12_V_dout(23 downto 23);
    tmp_38_fu_1004_p3 <= data_V_data_12_V_dout(7 downto 7);
    tmp_39_fu_1022_p3 <= add_ln415_12_fu_1016_p2(15 downto 15);
    tmp_3_fu_494_p3 <= add_ln415_fu_488_p2(15 downto 15);
    tmp_40_fu_1047_p3 <= data_V_data_13_V_dout(23 downto 23);
    tmp_41_fu_1065_p3 <= data_V_data_13_V_dout(7 downto 7);
    tmp_42_fu_1083_p3 <= add_ln415_13_fu_1077_p2(15 downto 15);
    tmp_43_fu_1108_p3 <= data_V_data_14_V_dout(23 downto 23);
    tmp_44_fu_1126_p3 <= data_V_data_14_V_dout(7 downto 7);
    tmp_45_fu_1144_p3 <= add_ln415_14_fu_1138_p2(15 downto 15);
    tmp_46_fu_1169_p3 <= data_V_data_15_V_dout(23 downto 23);
    tmp_47_fu_1187_p3 <= data_V_data_15_V_dout(7 downto 7);
    tmp_48_fu_1205_p3 <= add_ln415_15_fu_1199_p2(15 downto 15);
    tmp_4_fu_502_p3 <= data_V_data_1_V_dout(23 downto 23);
    tmp_5_fu_520_p3 <= data_V_data_1_V_dout(7 downto 7);
    tmp_6_fu_538_p3 <= add_ln415_1_fu_532_p2(15 downto 15);
    tmp_7_fu_546_p3 <= data_V_data_2_V_dout(23 downto 23);
    tmp_8_fu_564_p3 <= data_V_data_2_V_dout(7 downto 7);
    tmp_9_fu_582_p3 <= add_ln415_2_fu_576_p2(15 downto 15);
    trunc_ln708_10_fu_950_p4 <= data_V_data_11_V_dout(23 downto 8);
    trunc_ln708_11_fu_994_p4 <= data_V_data_12_V_dout(23 downto 8);
    trunc_ln708_12_fu_1055_p4 <= data_V_data_13_V_dout(23 downto 8);
    trunc_ln708_13_fu_1116_p4 <= data_V_data_14_V_dout(23 downto 8);
    trunc_ln708_14_fu_1177_p4 <= data_V_data_15_V_dout(23 downto 8);
    trunc_ln708_1_fu_510_p4 <= data_V_data_1_V_dout(23 downto 8);
    trunc_ln708_2_fu_554_p4 <= data_V_data_2_V_dout(23 downto 8);
    trunc_ln708_3_fu_598_p4 <= data_V_data_3_V_dout(23 downto 8);
    trunc_ln708_4_fu_642_p4 <= data_V_data_4_V_dout(23 downto 8);
    trunc_ln708_5_fu_686_p4 <= data_V_data_5_V_dout(23 downto 8);
    trunc_ln708_6_fu_730_p4 <= data_V_data_6_V_dout(23 downto 8);
    trunc_ln708_7_fu_774_p4 <= data_V_data_7_V_dout(23 downto 8);
    trunc_ln708_8_fu_818_p4 <= data_V_data_8_V_dout(23 downto 8);
    trunc_ln708_9_fu_862_p4 <= data_V_data_9_V_dout(23 downto 8);
    trunc_ln708_s_fu_906_p4 <= data_V_data_10_V_dout(23 downto 8);
    trunc_ln_fu_466_p4 <= data_V_data_0_V_dout(23 downto 8);
    zext_ln415_10_fu_924_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_916_p3),16));
    zext_ln415_11_fu_968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_960_p3),16));
    zext_ln415_12_fu_1012_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_1004_p3),16));
    zext_ln415_13_fu_1073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_1065_p3),16));
    zext_ln415_14_fu_1134_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_44_fu_1126_p3),16));
    zext_ln415_15_fu_1195_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_fu_1187_p3),16));
    zext_ln415_1_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_520_p3),16));
    zext_ln415_2_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_564_p3),16));
    zext_ln415_3_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_608_p3),16));
    zext_ln415_4_fu_660_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_652_p3),16));
    zext_ln415_5_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_696_p3),16));
    zext_ln415_6_fu_748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_740_p3),16));
    zext_ln415_7_fu_792_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_784_p3),16));
    zext_ln415_8_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_828_p3),16));
    zext_ln415_9_fu_880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_872_p3),16));
    zext_ln415_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_476_p3),16));
end behav;
